{"version":3,"sources":["webpack:///webpack/bootstrap 9d98233dd55827614a77","webpack:///external \"react\"","webpack:///external \"prop-types\"","webpack:///./kit/config.js","webpack:///external \"react-apollo\"","webpack:///external \"react-helmet\"","webpack:///external \"react-router-dom\"","webpack:///./kit/lib/routing.js","webpack:///external \"chalk\"","webpack:///./kit/lib/env.js","webpack:///external \"graphql\"","webpack:///./src/components/graphql.js","webpack:///./src/components/routes.js","webpack:///./src/components/redux.js","webpack:///./src/components/stats.js","webpack:///./src/components/styles/index.js","webpack:///./kit/entry/server_dev.js","webpack:///./kit/lib/console.js","webpack:///external \"boxen\"","webpack:///external \"ip\"","webpack:///./kit/entry/server.js","webpack:///external \"stream\"","webpack:///external \"http\"","webpack:///external \"https\"","webpack:///external \"isomorphic-fetch\"","webpack:///external \"react-dom/server\"","webpack:///external \"koa\"","webpack:///external \"koa-sslify\"","webpack:///external \"kcors\"","webpack:///external \"koa-send\"","webpack:///external \"koa-helmet\"","webpack:///external \"koa-router\"","webpack:///external \"microseconds\"","webpack:///external \"react-router\"","webpack:///external \"apollo-server-koa\"","webpack:///external \"apollo-local-query\"","webpack:///./src/app.js","webpack:///./src/reducers/counter.js","webpack:///./src/components/main/index.js","webpack:///./src/graphql/queries/all_messages.gql","webpack:///./src/graphql/queries/message.gql","webpack:///external \"react-redux\"","webpack:///./src/components/stats.scss","webpack:///./src/components/styles/styles.css","webpack:///./src/components/styles/styles.scss","webpack:///./src/components/styles/styles.less","webpack:///./src/components/main/main.scss","webpack:///./src/components/main/reactql-logo.svg","webpack:///./src/components/CollegeCard/index.js","webpack:///./src/components/CollegeCard/main.scss","webpack:///external \"react-google-sheet-connector\"","webpack:///./src/cert/self_signed.js","webpack:///./src/graphql/schema.js","webpack:///./kit/lib/redux.js","webpack:///external \"redux\"","webpack:///external \"redux-thunk\"","webpack:///external \"seamless-immutable\"","webpack:///./kit/views/ssr.js","webpack:///./kit/lib/apollo.js","webpack:///./config/paths.js","webpack:///external \"path\"","webpack:///external \"koa-bodyparser\"","webpack:///external \"lodash\""],"names":["Common","constructor","reducers","Map","apolloMiddleware","apolloAfterware","apolloNetworkOptions","apolloClientOptions","graphQLEndpoint","graphQLServer","addReducer","key","reducer","initialState","Error","set","enableGraphQLServer","endpoint","graphiQL","setGraphQLEndpoint","uri","addApolloMiddleware","middlewareFunc","push","addApolloAfterware","afterwareFunc","setApolloClientOptions","opt","setApolloNetworkOptions","Config","ServerConfig","routes","Set","koaAppFunc","enableHTTP","enableForceSSL","sslOptions","middleware","graphQLSchema","enableBodyParser","bodyParserOptions","corsOptions","getKoaApp","func","enableSSL","cert","forceSSL","disableHTTP","disableBodyParser","setBodyParserOptions","set404Handler","handler404","setErrorHandler","errorHandler","addMiddleware","add","addRoute","method","route","handlers","addGetRoute","addPostRoute","addPutRoute","addPatchRoute","addDeleteRoute","setGraphQLSchema","schema","setCORSOptions","ClientConfig","Status","PureComponent","render","code","children","props","staticContext","status","propTypes","number","isRequired","node","defaultProps","NotFound","Redirect","to","from","permanent","oneOfType","string","object","bool","getServerURL","host","port","allowSSL","stub","GraphQLMessage","data","message","text","isLoading","loading","shape","Home","Page","match","params","name","WhenNotFound","ReduxCounter","state","counter","triggerIncrement","dispatch","type","count","info","map","val","styleExamples","example","css","scripts","app","router","listen","get","use","allowedMethods","chalk","bgYellow","black","logServerStarted","green","bold","url","address","err","console","log","padding","borderColor","margin","staticMiddleware","createReactHandler","graphql","createNeworkInterface","localInterface","context","createLocalInterface","externalInterface","staticMiddlewareHandler","ctx","next","path","root","public","immutable","distDev","e","chunkManifest","reactHandler","routeContext","components","request","store","apollo","includes","redirect","htmlStream","write","reactStream","renderToNodeStream","rewind","webpackManifest","__STATE__","getState","pipe","body","res","statusCode","start","now","end","parse","since","total","microseconds","milliseconds","seconds","ssrMode","networkInterface","forEach","post","graphiQLEndpoint","endpointURL","require","servers","createServer","callback","process","env","SSL_PORT","default","stateDump","JSON","stringify","engine","on","error","App","action","merge","Main","Component","colleges","cname","zone","response","updateInfo","bind","fetch","then","json","setState","Object","assign","componentWillMount","values","undefined","v","comments","desiredCount","items","filter","i","length","cards","r","card","mainWrapper","content","cardWrapper","statusIntents","getIntent","display","countInfo","buildMapsURL","query","split","join","event","preventDefault","window","open","cardTags","getMessage","Date","Message","description","fields","resolve","msg","Query","createNewStore","hasState","unwind","concat","arr","defaultReducer","keys","apolloClient","__REDUX_DEVTOOLS_EXTENSION__","f","Html","head","meta","toComponent","title","__html","reduce","out","src","arrayOf","element","createClient","getNetworkInterface","browserClient","reduxRootSelector","opts","applyMiddleware","useAfter","applyAfterware","__dirname","module","exports","kit","entry","webpack","views","static","dist"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AC7DA,kC;;;;;;ACAA,uC;;;;;;;;;;;;ACAA;;AAEA;AACA;IACMA,M,GAAN,MAAMA,MAAN,CAAa;AACXC,gBAAc;AACZ;AACA,SAAKC,QAAL,GAAgB,IAAIC,GAAJ,EAAhB;;AAEA;AACA,SAAKC,gBAAL,GAAwB,EAAxB;AACA,SAAKC,eAAL,GAAuB,EAAvB;AACA,SAAKC,oBAAL,GAA4B,EAA5B;AACA,SAAKC,mBAAL,GAA2B,EAA3B;;AAEA;AACA;AACA,SAAKC,eAAL,GAAuB,IAAvB;;AAEA;AACA,SAAKC,aAAL,GAAqB,KAArB;AACD;;AAED;;AAEA;AACA;AACAC,aAAWC,GAAX,EAAgBC,OAAhB,EAAyBC,eAAe,EAAxC,EAA4C;AAC1C,QAAI,OAAOD,OAAP,KAAmB,UAAvB,EAAmC;AACjC,YAAM,IAAIE,KAAJ,CAAW,0BAAyBH,GAAI,gCAAxC,CAAN;AACD;AACD,SAAKT,QAAL,CAAca,GAAd,CAAkBJ,GAAlB,EAAuB;AACrBC,aADqB;AAErBC;AAFqB,KAAvB;AAID;;AAED;;AAEA;AACA;AACAG,sBAAoBC,WAAW,UAA/B,EAA2CC,WAAW,IAAtD,EAA4D;AAC1D,SAAKT,aAAL,GAAqB,IAArB;AACA,SAAKD,eAAL,GAAuBS,QAAvB;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACD;;AAED;AACAC,qBAAmBC,GAAnB,EAAwBF,WAAW,IAAnC,EAAyC;AACvC,SAAKV,eAAL,GAAuBY,GAAvB;AACA,SAAKF,QAAL,GAAgBA,QAAhB;AACD;;AAED;AACAG,sBAAoBC,cAApB,EAAoC;AAClC,SAAKlB,gBAAL,CAAsBmB,IAAtB,CAA2BD,cAA3B;AACD;;AAED;AACAE,qBAAmBC,aAAnB,EAAkC;AAChC,SAAKpB,eAAL,CAAqBkB,IAArB,CAA0BE,aAA1B;AACD;;AAED;AACA;AACAC,yBAAuBC,MAAM,EAA7B,EAAiC;AAC/B,SAAKpB,mBAAL,GAA2BoB,GAA3B;AACD;;AAED;AACA;AACAC,0BAAwBD,MAAM,EAA9B,EAAkC;AAChC,SAAKrB,oBAAL,GAA4BqB,GAA5B;AACD;AArEU,C;;AAwEb;;AACA,IAAIE,MAAJ;;AAEA;AACA;AACA,IAAI,IAAJ,EAAY;AACVA,WAAS,MAAMC,YAAN,SAA2B9B,MAA3B,CAAkC;AACzCC,kBAAc;AACZ;AACA;AACA,WAAK8B,MAAL,GAAc,IAAIC,GAAJ,EAAd;;AAEA;AACA,WAAKC,UAAL,GAAkB,IAAlB;;AAEA;AACA,WAAKC,UAAL,GAAkB,IAAlB;;AAEA;AACA,WAAKC,cAAL,GAAsB,KAAtB;;AAEA;AACA;AACA,WAAKC,UAAL,GAAkB,IAAlB;;AAEA;AACA,WAAKC,UAAL,GAAkB,IAAIL,GAAJ,EAAlB;;AAEA;AACA,WAAKM,aAAL,GAAqB,IAArB;;AAEA;AACA;AACA;AACA,WAAKpB,QAAL,GAAgB,KAAhB;;AAEA;AACA,WAAKqB,gBAAL,GAAwB,IAAxB;AACA,WAAKC,iBAAL,GAAyB,EAAzB;;AAEA;AACA,WAAKC,WAAL,GAAmB,EAAnB;AACD;;AAED;;AAEA;AACA;AACAC,cAAUC,IAAV,EAAgB;AACd,WAAKV,UAAL,GAAkBU,IAAlB;AACD;;AAED;AACA;AACA;AACAC,cAAUjB,GAAV,EAAe;AACb;AACA,UAAI,OAAOA,GAAP,KAAe,QAAf,IAA2B,CAACA,IAAIhB,GAAhC,IAAuC,CAACgB,IAAIkB,IAAhD,EAAsD;AACpD,cAAM,IAAI/B,KAAJ,CAAU,gDAAV,CAAN;AACD;AACD,WAAKsB,UAAL,GAAkBT,GAAlB;AACD;;AAED;AACA;AACAmB,aAASnB,MAAM,EAAf,EAAmB;AACjB,WAAKQ,cAAL,GAAsBR,GAAtB;AACD;;AAED;AACA;AACAoB,kBAAc;AACZ,WAAKb,UAAL,GAAkB,KAAlB;AACD;;AAED;AACA;AACAc,wBAAoB;AAClB,WAAKT,gBAAL,GAAwB,KAAxB;AACD;;AAEDU,yBAAqBtB,MAAM,EAA3B,EAA+B;AAC7B,WAAKa,iBAAL,GAAyBb,GAAzB;AACD;;AAED;AACA;AACA;AACAuB,kBAAcP,IAAd,EAAoB;AAClB,UAAI,OAAOA,IAAP,KAAgB,UAApB,EAAgC;AAC9B,cAAM,IAAI7B,KAAJ,CAAU,gCAAV,CAAN;AACD;AACD,WAAKqC,UAAL,GAAkBR,IAAlB;AACD;;AAED;AACA;AACA;AACAS,oBAAgBT,IAAhB,EAAsB;AACpB,UAAI,OAAOA,IAAP,KAAgB,UAApB,EAAgC;AAC9B,cAAM,IAAI7B,KAAJ,CAAU,kCAAV,CAAN;AACD;AACD,WAAKuC,YAAL,GAAoBV,IAApB;AACD;;AAED;AACAW,kBAAchC,cAAd,EAA8B;AAC5B,WAAKe,UAAL,CAAgBkB,GAAhB,CAAoBjC,cAApB;AACD;;AAED;AACAkC,aAASC,MAAT,EAAiBC,KAAjB,EAAwB,GAAGC,QAA3B,EAAqC;AACnC,WAAK5B,MAAL,CAAYwB,GAAZ,CAAgB;AACdE,cADc;AAEdC,aAFc;AAGdC;AAHc,OAAhB;AAKD;;AAED;AACAC,gBAAYF,KAAZ,EAAmB,GAAGC,QAAtB,EAAgC;AAC9B,WAAKH,QAAL,CAAc,KAAd,EAAqBE,KAArB,EAA4B,GAAGC,QAA/B;AACD;;AAED;AACAE,iBAAaH,KAAb,EAAoB,GAAGC,QAAvB,EAAiC;AAC/B,WAAKH,QAAL,CAAc,MAAd,EAAsBE,KAAtB,EAA6B,GAAGC,QAAhC;AACD;;AAED;AACAG,gBAAYJ,KAAZ,EAAmB,GAAGC,QAAtB,EAAgC;AAC9B,WAAKH,QAAL,CAAc,KAAd,EAAqBE,KAArB,EAA4B,GAAGC,QAA/B;AACD;;AAED;AACAI,kBAAcL,KAAd,EAAqB,GAAGC,QAAxB,EAAkC;AAChC,WAAKH,QAAL,CAAc,OAAd,EAAuBE,KAAvB,EAA8B,GAAGC,QAAjC;AACD;;AAED;AACAK,mBAAeN,KAAf,EAAsB,GAAGC,QAAzB,EAAmC;AACjC,WAAKH,QAAL,CAAc,QAAd,EAAwBE,KAAxB,EAA+B,GAAGC,QAAlC;AACD;;AAED;AACA;AACAM,qBAAiBC,MAAjB,EAAyB;AACvB,WAAK5B,aAAL,GAAqB4B,MAArB;AACD;;AAED;AACAC,mBAAexC,MAAM,EAArB,EAAyB;AACvB,WAAKc,WAAL,GAAmBd,GAAnB;AACD;AAnJwC,GAA3C;AAqJD,CAtJD,MAsJO;AACL;AACA;AACAE,WAAS,MAAMuC,YAAN,SAA2BpE,MAA3B,CAAkC,EAA3C;AACD;;AAED;AACA;AACA;kBACe,IAAI6B,MAAJ,E;;;;;;AChPf,yC;;;;;;ACAA,yC;;;;;;ACAA,6C;;;;;;;;;;;;;;ACKA;;;;AACA;;;;AAEA;;;;AAEA;;AAEA;AACA;IACMwC,M,GAAN,MAAMA,MAAN,SAAqB,gBAAMC,aAA3B,CAAyC;;AAUvCC,WAAS;AACP,UAAM,EAAEC,IAAF,EAAQC,QAAR,KAAqB,KAAKC,KAAhC;AACA,WACE,uDAAO,QAAQ,CAAC,EAAEC,aAAF,EAAD,KAAuB;AACpC,YAAIA,aAAJ,EAAmB;AACjBA,wBAAcC,MAAd,GAAuBJ,IAAvB;AACD;AACD,eAAOC,QAAP;AACD,OALD,GADF;AAQD;AApBsC,C;;AAuBzC;AACA;AACA;AACA;AAxCA;;AAEA;AACA;;AAWMJ,M,CACGQ,S,GAAY;AACjBL,QAAM,oBAAUM,MAAV,CAAiBC,UADN;AAEjBN,YAAU,oBAAUO;AAFH,C;AADfX,M,CAMGY,Y,GAAe;AACpBR,YAAU;AADU,C;IAqBXS,Q,WAAAA,Q,GAAN,MAAMA,QAAN,SAAuB,gBAAMZ,aAA7B,CAA2C;;AAShDC,WAAS;AACP,UAAM,EAAEE,QAAF,KAAe,KAAKC,KAA1B;;AAEA,WACE;AAAC,YAAD;AAAA,QAAQ,MAAM,GAAd;AACGD;AADH,KADF;AAKD;AAjB+C,C;;AAoBlD;AACA;;AArBaS,Q,CACJL,S,GAAY;AACjBJ,YAAU,oBAAUO;AADH,C;AADRE,Q,CAKJD,Y,GAAe;AACpBR,YAAU;AADU,C;IAiBXU,Q,WAAAA,Q,GAAN,MAAMA,QAAN,SAAuB,gBAAMb,aAA7B,CAA2C;;AAiBhDC,WAAS;AACP,UAAM,EAAEa,EAAF,EAAMC,IAAN,EAAY9D,IAAZ,EAAkB+D,SAAlB,KAAgC,KAAKZ,KAA3C;AACA,UAAMF,OAAOc,YAAY,GAAZ,GAAkB,GAA/B;AACA,WACE;AAAC,YAAD;AAAA,QAAQ,MAAMd,IAAd;AACE,gEAAqB,IAAIY,EAAzB,EAA6B,MAAMC,IAAnC,EAAyC,MAAM9D,IAA/C;AADF,KADF;AAKD;AAzB+C,C;AAArC4D,Q,CACJN,S,GAAY;AACjBO,MAAI,oBAAUG,SAAV,CAAoB,CACtB,oBAAUC,MADY,EAEtB,oBAAUC,MAFY,CAApB,EAGDV,UAJc;AAKjBM,QAAM,oBAAUG,MALC;AAMjBjE,QAAM,oBAAUmE,IANC;AAOjBJ,aAAW,oBAAUI;AAPJ,C;AADRP,Q,CAWJF,Y,GAAe;AACpBI,QAAM,IADc;AAEpB9D,QAAM,KAFc;AAGpB+D,aAAW;AAHS,C;;;;;;AC1ExB,kC;;;;;;;;;;;;QCKgBK,Y,GAAAA,Y;AALhB;;AAEA;;AAEA;AACO,SAASA,YAAT,CAAsBC,OAAO,WAA7B,EAA+CC,OAAO,MAAtD,EAAwEC,WAAW,IAAnF,EAAyF;AAC9F;AACA,MAAIA,YAAY,IAAhB,EAAsC;AACpC,UAAMC,OAAQ,WAAUH,QAAQ,WAAiB,EAAjD;;AAEA;AACA,QAAI,SAAyB,KAA7B,EAAoC,OAAOG,IAAP;AACpC,WAAQ,GAAEA,IAAK,IAAG,IAAqB,EAAvC;AACD;;AAED;AACA,QAAMA,OAAQ,UAASH,QAAQ,WAAiB,EAAhD;;AAEA;AACA,MAAIC,SAAS,IAAb,EAAmB,OAAOE,IAAP;AACnB,SAAQ,GAAEA,IAAK,IAAGF,IAAK,EAAvB;AACD,C;;;;;;ACrBD,oC;;;;;;;;;;;;;;kBCAA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAKA;;;AAGA;;AAEA;AACA;AACA;;;AAVA;;;;AACA;;;;AAGA;;AAOA;;;;;;AAEA;;AAEA;AACA;AACA;AACA;IAEqBG,c,WADpB,iD,gBACc,MAAMA,cAAN,SAA6B,gBAAM1B,aAAnC,CAAiD;;AAiB9DC,WAAS;AACP,UAAM,EAAE0B,IAAF,KAAW,KAAKvB,KAAtB;;AAEA;AACA;AACA;AACA,UAAMwB,UAAUD,KAAKC,OAAL,IAAgBD,KAAKC,OAAL,CAAaC,IAA7C;;AAEA;AACA;AACA,UAAMC,YAAYH,KAAKI,OAAL,GAAe,KAAf,GAAuB,MAAzC;AACA,WACE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAiC;AAAA;AAAA;AAAKH;AAAL;AAAjC,OADF;AAEE;AAAA;AAAA;AAAA;AAAyBE;AAAzB;AAFF,KADF;AAMD;AAlC6D,C;AAA3CJ,c,CACZnB,S,GAAY;AACjBoB,QAAM,oBAAUK,KAAV,CAAgB;AACpBJ,aAAS,oBAAUI,KAAV,CAAgB;AACvBH,YAAM,oBAAUX;AADO,KAAhB;AADW,GAAhB;AADW,C;AADAQ,c,CASZf,Y,GAAe;AACpBgB,QAAM;AACJC,aAAS;AACPC,YAAM;AADC;AADL;AADc,C;kBATHH,c;;;;;;;;;;;;;;AChBrB;;;;AACA;;;;AAKA;;;;AAEA;;AAEA;AACO,MAAMO,sBAAO,MAClB;AAAA;AAAA;AAAA;AAAA,CADK;;AAIP;AACA;AACA;;;AAdA;;AAEA;AApBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AAmBO,MAAMC,sBAAO,CAAC,EAAEC,KAAF,EAAD,KAClB;AAAA;AAAA;AAAA;AAAoBA,QAAMC,MAAN,CAAaC;AAAjC,CADK;;AAIP;AACA;AACAH,KAAK3B,SAAL,GAAiB;AACf4B,SAAO,oBAAUH,KAAV,CAAgB;AACrBI,YAAQ,oBAAUjB;AADG,GAAhB,EAEJV;AAHY,CAAjB;;AAMA;AACO,MAAM6B,sCAAe,MAC1B;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA;AADF,CADK,C;;;;;;;;;;;;;;kBC9CP;AACA;AACA;;AAEA;AACA;;AAEA;;;AAIA;;;AAHA;;;;AACA;;;;AAGA;;;;AAEA;;AAEA;AACA;AACA;IAEqBC,Y,WADpB,yBAAQC,UAAU,EAAEC,SAASD,MAAMC,OAAjB,EAAV,CAAR,C,gBACc,MAAMF,YAAN,SAA2B,gBAAMvC,aAAjC,CAA+C;AAAA;AAAA;;AAAA,wCAiB5D0C,gBAjB4D,GAiBzC,MAAM;AACvB,WAAKtC,KAAL,CAAWuC,QAAX,CAAoB;AAClBC,cAAM;AADY,OAApB;AAGD,KArB2D;AAAA;;AAa5D;AACA;AACA;AACA;;;AAOA3C,WAAS;AACP,UAAM,EAAE4C,KAAF,KAAY,KAAKzC,KAAL,CAAWqC,OAA7B;AACA,WACE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAiCI;AAAjC,OADF;AAEE;AAAA;AAAA,UAAQ,SAAS,KAAKH,gBAAtB;AAAA;AAAA;AAFF,KADF;AAMD;AA/B2D,C;AAAzCH,Y,CACZhC,S,GAAY;AACjBkC,WAAS,oBAAUT,KAAV,CAAgB;AACvBa,WAAO,oBAAUrC,MAAV,CAAiBC;AADD,GAAhB;AADQ,C;AADA8B,Y,CAOZ5B,Y,GAAe;AACpB8B,WAAS;AACPI,WAAO;AADA,GADW,E;kBAPHN,Y;;;;;;;;;;;;;ACZrB;;;;AAKA;;;;;;AAEA;;AAfA;;AAEA;AACA;;AAEA;;AAEA;kBAUe,MAAM;AACnB;AACA;AACA,QAAMO,OAAO,CACX,CAAC,aAAD,EAAgB,aAAhB,CADW,CAAb;;AAIA,SACE;AAAA;AAAA,MAAI,WAAW,gBAAInB,IAAnB;AACGmB,SAAKC,GAAL,CAAS,CAAC,CAAC1G,GAAD,EAAM2G,GAAN,CAAD,KACR;AAAA;AAAA,QAAI,KAAK3G,GAAT;AAAeA,SAAf;AAAA;AAAqB;AAAA;AAAA;AAAO2G;AAAP;AAArB,KADD;AADH,GADF;AAOD,C;;AArBD;;AAEA,S;;;;;;;;;;;;;ACNA;;;;AAKA;;;;AACA;;;;AACA;;;;;;AAEA;;AAfA;;AAEA;AACA;;AAEA;kBAYe,MACb;AAAA;AAAA,IAAI,WAAW,iBAAIC,aAAnB;AACE;AAAA;AAAA,MAAI,WAAW,iBAAIC,OAAnB;AAAA;AAAA,GADF;AAEE;AAAA;AAAA,MAAI,WAAW,iBAAKA,OAApB;AAAA;AAAA,GAFF;AAGE;AAAA;AAAA,MAAI,WAAW,iBAAKA,OAApB;AAAA;AAAA;AAHF,C;;AAVF;;AAEA,S;;;;;;;;;;;;;;;;ACAA;;;;AAKA;;AAGA;;;;;;AAEA;;AAEA;;;AAVA;;AAEA;AASA,MAAMC,MAAM,uBAAZ;;AANA;AAjBA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAeA,MAAMC,UAAU,CACd,WADc,EAEd,YAFc,EAEAL,GAFA,CAEI1G,OAAQ,IAAGA,GAAI,EAFnB,CAAhB;;AAIA;AACA;AACA,CAAC,YAAY;AACX,QAAM,EAAEgH,GAAF,EAAOC,MAAP,EAAeC,MAAf,qBAAN;;AAEA;AACAD,SAAOE,GAAP,CAAW,IAAX,EAAiB,gCAAmBL,GAAnB,EAAwBC,OAAxB,CAAjB;;AAEA;AACAC,MACGI,GADH,CACO,+BADP,EAEGA,GAFH,CAEOH,OAAO7F,MAAP,EAFP,EAGGgG,GAHH,CAGOH,OAAOI,cAAP,EAHP;;AAKA;AACAH;;AAEA;AACA,iCAAiB;AACfX,UAAM,uBADS;AAEfe,WAAO,gBAAMC,QAAN,CAAeC;AAFP,GAAjB;AAID,CApBD,I;;;;;;;;;;;;QCRgBC,gB,GAAAA,gB;;AAbhB;;;;AAGA;;;;AAGA;;;;AAGA;;;;AAEA;;AANA;AAdA;;AAGA;AACA;;AAEA;;AAEA;AAcO,SAASA,gBAAT,CAA0BzG,MAAM,EAAhC,EAAoC;AACzC,MAAIuE,UAAU,gBAAMmC,KAAN,CAAa,WAAU,CAAC1G,IAAIsG,KAAJ,IAAa,gBAAMK,IAApB,EAA0B3G,IAAIuF,IAA9B,CAAoC,OAAM,gBAAMoB,IAAN,CAAW,aAAX,CAAiC,WAAlG,CAAd;AACApC,aAAY,KAAI,gBAAMoC,IAAN,CAAW,mBAAX,CAAgC,IAAG,uBAAa3G,IAAIiE,IAAjB,EAAuBjE,IAAIkE,IAA3B,EAAiClE,IAAImE,QAArC,CAA+C,EAAlG;;AAEA,MAAI;AACF,UAAMyC,MAAM,uBAAa,aAAGC,OAAH,EAAb,EAA2B7G,IAAIkE,IAA/B,EAAqClE,IAAImE,QAAzC,CAAZ;AACAI,eAAY,OAAM,gBAAMoC,IAAN,CAAW,mBAAX,CAAgC,IAAGC,GAAI,EAAzD;AACD,GAHD,CAGE,OAAOE,GAAP,EAAY,CAAE,mBAAqB;;AAErCC,UAAQC,GAAR,CACE,qBAAMzC,OAAN,EAAe;AACb0C,aAAS,CADI;AAEbC,iBAAa,OAFA;AAGbC,YAAQ;AAHK,GAAf,CADF;AAOD;;AArBD;;;AANA,mD;;;;;;ACXA,kC;;;;;;ACAA,+B;;;;;;;;;;;;QCsIgBC,gB,GAAAA,gB;QAsBAC,kB,GAAAA,kB;;AA5IhB;;AAKA;;;;AACA;;;;AAKA;;AAGA;;;;AAGA;;;;AAIA;;;;AAMA;;AAGA;;;;AAGA;;;;AAGA;;;;AAGA;;;;AAGA;;;;AAGA;;;;AAIA;;AAIA;;;;AAGA;;AAGA;;;;AAGA;;IAAYC,O;;AAMZ;;;;AAKA;;;;AAGA;;;;AAGA;;AAIA;;;;AAIA;;;;;;;;AAEA;;AAEA;AACA;AACA;;;AAZA;AACA;;;AAPA;;;AAXA;;AAEA;AACA;;;AATA;;;AAPA;AACA;;;AARA;;;AANA;;;AANA;;;AATA;AACA;AACA;AACA;;;AAVA;;;AARA;;AAEA;;;AARA;AACA;AACA;AA0FA,MAAMC,wBAAwB,CAAC,MAAM;AACnC;AACA;AACA;AACA,WAASC,cAAT,CAAwBC,OAAxB,EAAiC;AAC/B,WAAO,2BAAiBC,oBAAjB,CACLJ,OADK,EAEL,iBAAO3G,aAFF,EAGL;AACE;AACA;AACA8G;AAHF,KAHK,CAAP;AASD;;AAED,WAASE,iBAAT,GAA6B;AAC3B,WAAO,iCAAoB,iBAAO9I,eAA3B,CAAP;AACD;;AAED,SAAO,iBAAOC,aAAP,GAAuB0I,cAAvB,GAAwCG,iBAA/C;AACD,CArB6B,GAA9B;;AAuBA;;;AAhCA;AACA;;;AARA;;;AARA;AACA;AACA;;;AAXA;;;AANA;;;AARA;AACA;;;AAPA;;;AANA;;;AANA;;;AAVA;AACA;;;AAPA;AA7BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AAuHO,SAASP,gBAAT,GAA4B;AACjC,SAAO,eAAeQ,uBAAf,CAAuCC,GAAvC,EAA4CC,IAA5C,EAAkD;AACvD,QAAI;AACF,UAAID,IAAIE,IAAJ,KAAa,GAAjB,EAAsB;AACpB,eAAO,MAAM,uBACXF,GADW,EAEXA,IAAIE,IAFO,EAGX,SAAwC;AACtCC,gBAAM,gBAAMC,MAD0B;AAEtCC,qBAAW;AAF2B,SAAxC,GAGI;AACFF,gBAAM,gBAAMG;AADV,SANO,CAAb;AAUD;AACF,KAbD,CAaE,OAAOC,CAAP,EAAU,CAAE,8BAAgC;AAC9C,WAAON,MAAP;AACD,GAhBD;AAiBD;;AAED;AACA;AACO,SAAST,kBAAT,CAA4BvB,MAAM,EAAlC,EAAsCC,UAAU,EAAhD,EAAoDsC,gBAAgB,EAApE,EAAwE;AAC7E,SAAO,eAAeC,YAAf,CAA4BT,GAA5B,EAAiC;AACtC,UAAMU,eAAe,EAArB;;AAEA;AACA;AACA;AACA,UAAMC,aACJ;AAAA;AAAA,QAAc,UAAUX,IAAIY,OAAJ,CAAY7B,GAApC,EAAyC,SAAS2B,YAAlD;AACE;AAAA;AAAA,UAAgB,OAAOV,IAAIa,KAA3B,EAAkC,QAAQb,IAAIc,MAA9C;AACE;AADF;AADF,KADF;;AAQA;AACA;AACA,UAAM,kCAAgBH,UAAhB,CAAN;;AAEA;AACA,QAAI,CAAC,GAAD,EAAM,GAAN,EAAWI,QAAX,CAAoBL,aAAatF,MAAjC,CAAJ,EAA8C;AAC5C;AACA4E,UAAI5E,MAAJ,GAAasF,aAAatF,MAA1B;;AAEA;AACA4E,UAAIgB,QAAJ,CAAaN,aAAa3B,GAA1B;;AAEA;AACA;AACD;;AAED;AACA,QAAI2B,aAAatF,MAAb,KAAwB,GAA5B,EAAiC;AAC/B;AACA;AACA;;AAEA,UAAI,iBAAOzB,UAAX,EAAuB;AACrB,yBAAOA,UAAP,CAAkBqG,GAAlB;;AAEA;AACA;AACA;AACD;;AAEDA,UAAI5E,MAAJ,GAAasF,aAAatF,MAA1B;AACD;;AAED;AACA,UAAM6F,aAAa,yBAAnB;;AAEA;AACAA,eAAWC,KAAX,CAAiB,iBAAjB;;AAEA;AACA;AACA;AACA,UAAMC,cAAc,iBAAeC,kBAAf,CAClB;AAAA;AAAA;AACE,cAAM,sBAAOC,MAAP,EADR;AAEE,gBAAQ;AACNC,2BAAiBd,aADX;AAENe,qBAAWvB,IAAIa,KAAJ,CAAUW,QAAV;AAFL,SAFV;AAME,aAAKvD,GANP;AAOE,iBAASC,OAPX;AAQGyC;AARH,KADkB,CAApB;;AAaA;AACAQ,gBAAYM,IAAZ,CAAiBR,UAAjB;;AAEA;AACA;AACAjB,QAAItC,IAAJ,GAAW,WAAX;AACAsC,QAAI0B,IAAJ,GAAWT,UAAX;AACD,GA5ED;AA6ED;;AAED;AACA;AACA,MAAM7C,SAAU,yBAAD;AACb;AACCE,GAFY,CAER,OAFQ,EAEC,MAAM0B,GAAN,IAAa;AACzBA,MAAI0B,IAAJ,GAAW,MAAX;AACD,CAJY;;AAMb;AACA;AAPa,CAQZpD,GARY,CAQR,cARQ,EAQQ,MAAM0B,GAAN,IAAa;AAChCA,MAAI2B,GAAJ,CAAQC,UAAR,GAAqB,GAArB;AACD,CAVY,CAAf;;AAYA;AACA;AACA,MAAMzD,MAAM;AACV;AADU,CAETI,GAFS,CAEL,qBAAQ,iBAAOtF,WAAf,CAFK;;AAIV;AAJU,CAKTsF,GALS,CAKL,0BALK;;AAOV;AACA;AARU,CASTA,GATS,CASL,OAAOyB,GAAP,EAAYC,IAAZ,KAAqB;AACxB,MAAI;AACF,UAAMA,MAAN;AACD,GAFD,CAEE,OAAOM,CAAP,EAAU;AACV;AACA;AACA,QAAI,OAAO,iBAAO1G,YAAd,KAA+B,UAAnC,EAA+C;AAC7C,uBAAOA,YAAP,CAAoB0G,CAApB,EAAuBP,GAAvB,EAA4BC,IAA5B;AACD,KAFD,MAEO;AACLf,cAAQC,GAAR,CAAY,QAAZ,EAAsBoB,EAAE7D,OAAxB;AACAsD,UAAI0B,IAAJ,GAAW,6CAAX;AACD;AACF;AACF,CAtBS;;AAwBV;AACA;AAzBU,CA0BTnD,GA1BS,CA0BL,OAAOyB,GAAP,EAAYC,IAAZ,KAAqB;AACxB,QAAM4B,QAAQ,uBAAGC,GAAH,EAAd;AACA,QAAM7B,MAAN;AACA,QAAM8B,MAAM,uBAAGC,KAAH,CAAS,uBAAGC,KAAH,CAASJ,KAAT,CAAT,CAAZ;AACA,QAAMK,QAAQH,IAAII,YAAJ,GAAoBJ,IAAIK,YAAJ,GAAmB,GAAvC,GAA+CL,IAAIM,OAAJ,GAAc,GAA3E;AACArC,MAAIzI,GAAJ,CAAQ,eAAR,EAA0B,GAAE2K,QAAQ,GAAI,IAAxC;AACD,CAhCS;;AAkCV;AACA;AACA;AApCU,CAqCT3D,GArCS,CAqCL,OAAOyB,GAAP,EAAYC,IAAZ,KAAqB;AACxB;AACAD,MAAIc,MAAJ,GAAa,0BAAa;AACxBwB,aAAS,IADe;AAExB;AACA;AACA;AACAC,sBAAkB7C,sBAAsBM,GAAtB;AALM,GAAb,CAAb;;AAQA;AACAA,MAAIa,KAAJ,GAAY,qBAAeb,IAAIc,MAAnB,CAAZ;;AAEA;AACA,SAAOb,MAAP;AACD,CApDS,CAAZ;;AAsDA;;AAEA;AACA,IAAI,iBAAOtH,cAAX,EAA2B;AACzBwF,MAAII,GAAJ,CAAQ,yBAAO,iBAAO5F,cAAd,CAAR;AACD;;AAED;AACA,iBAAOE,UAAP,CAAkB2J,OAAlB,CAA0B1K,kBAAkBqG,IAAII,GAAJ,CAAQzG,cAAR,CAA5C;;AAEA;AACA,IAAI,iBAAOb,aAAX,EAA0B;AACxB;AACA;AACAmH,SAAOqE,IAAP,CACE,iBAAOzL,eADT,EAEE,iCAAW4I,YAAY;AACrB;AACAA,WAFqB;AAGrB;AACAlF,YAAQ,iBAAO5B;AAJM,GAAZ,CAAX,CAFF;AASD;;AAED;AACA;AACA;;AAEA,IAAI,iBAAOpB,QAAX,EAAqB;AACnB;AACA;AACA,MAAIgL,gBAAJ;;AAEA,MAAI,OAAO,iBAAOhL,QAAd,KAA2B,QAA/B,EAAyC;AACvC;AACAgL,uBAAmB,iBAAOhL,QAA1B;AACD,GAHD,MAGO,IAAI,iBAAOT,aAAX,EAA0B;AAC/B;AACA;AACAyL,uBAAmB,iBAAO1L,eAA1B;AACD,GAJM,MAIA;AACL;AACA;AACA0L,uBAAmB,UAAnB;AACD;;AAEDtE,SAAOE,GAAP,CACEoE,gBADF,EAEE,kCAAY;AACVC,iBAAa,iBAAO3L;AADV,GAAZ,CAFF;AAMD;;AAED;AACA,iBAAOuB,MAAP,CAAciK,OAAd,CAAsBtI,SAAS;AAC7BkE,SAAOlE,MAAMD,MAAb,EAAqBC,MAAMA,KAA3B,EAAkC,GAAGA,MAAMC,QAA3C;AACD,CAFD;;AAIA;;AAEA;AACA;AACA,IAAI,iBAAOpB,gBAAX,EAA6B;AAC3BoF,MAAII,GAAJ,CAAQ,mBAAAqE,CAAQ,EAAR;AACN;AACA,mBAAO5J,iBAFD,CAAR;AAID;;AAED;;AAEA;AACA;AACA,IAAI,OAAO,iBAAOP,UAAd,KAA6B,UAAjC,EAA6C;AAC3C,mBAAOA,UAAP,CAAkB0F,GAAlB;AACD;;AAED;AACA;AACA,MAAME,SAAS,MAAM;AACnB;AACA,QAAMwE,UAAU,EAAhB;;AAEA;AACA,MAAI,iBAAOnK,UAAX,EAAuB;AACrBmK,YAAQ9K,IAAR,CACE,eAAK+K,YAAL,CAAkB3E,IAAI4E,QAAJ,EAAlB,EAAkC1E,MAAlC,CAAyC,MAAzC,CADF;AAGD;;AAED;AACA,MAAI,KAAJ,EAA0B;AACxBwE,YAAQ9K,IAAR,CACE,gBAAM+K,YAAN,CAAmB,iBAAOlK,UAA1B,EAAsCuF,IAAI4E,QAAJ,EAAtC,EAAsD1E,MAAtD,CAA6D2E,QAAQC,GAAR,CAAYC,QAAzE,CADF;AAGD;;AAED,SAAOL,OAAP;AACD,CAnBD;;AAqBA;kBACe;AACbzE,QADa;AAEbD,KAFa;AAGbE;AAHa,C;;;;;;ACzZf,mC;;;;;;ACAA,iC;;;;;;ACAA,kC;;;;;;ACAA,6C;;;;;;ACAA,6C;;;;;;ACAA,gC;;;;;;ACAA,uC;;;;;;ACAA,kC;;;;;;ACAA,qC;;;;;;ACAA,uC;;;;;;ACAA,uC;;;;;;ACAA,yC;;;;;;ACAA,yC;;;;;;ACAA,8C;;;;;;ACAA,+C;;;;;;;;;;;;;ACmBA;;;;AAEA;;;;AAIA;;;;AAGA;;;;AAIA;;AA8BA;;;;;;AA5BA;;AAEA;;AAEA;AACA;AACA;AACA;;;AAdA;;AAPA;AAsBA,iBAAOnH,UAAP,CAAkB,SAAlB,qBAA6C,EAAEyG,OAAO,CAAT,EAA7C;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAvBA;AACA;;AATA;;AAEA;AAxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AAoCA,iBAAOnG,mBAAP;AACA;;;AAGA;;AAEA;AACA;;AAEA,IAAI,IAAJ,EAAY;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;AAIA,QAAM6B,OAAO,mBAAAuJ,CAAQ,EAAR,CAAb;AACA,mBAAOxJ,SAAP,CAAiB,EAAEjC,KAAKkC,KAAKlC,GAAZ,EAAiBkC,MAAMA,KAAKA,IAA5B,EAAjB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAOoB,gBAAP,CAAwB,mBAAAmI,CAAQ,EAAR,EAA8BO,OAAtD;;AAEA;;AAEA;AACA;AACA,mBAAO/I,WAAP,CAAmB,OAAnB,EAA4B,MAAM4F,GAAN,IAAa;AACvC;AACA;AACA,UAAMoD,YAAYC,KAAKC,SAAL,CAAetD,IAAIa,KAAJ,CAAUW,QAAV,EAAf,CAAlB;;AAEA;AACA;AACA;AACA;AACAxB,QAAI0B,IAAJ,GAAY,8CAA6C0B,SAAU,EAAnE;AACD,GAVD;;AAYA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAO1J,aAAP,CAAqBsG,OAAO;AAC1B;AACA;AACA;AACA;AACA,UAAMoD,YAAYC,KAAKC,SAAL,CAAetD,IAAIa,KAAJ,CAAUW,QAAV,EAAf,CAAlB;;AAEA;AACA;AACA;AACAxB,QAAI5E,MAAJ,GAAa,GAAb;;AAEA;AACA4E,QAAI0B,IAAJ,GAAY,yDAAwD0B,SAAU,EAA9E;AACD,GAdD;;AAgBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAOxJ,eAAP,CAAuB,CAAC2G,CAAD,EAAIP,GAAJ,CAAQ,sCAAR,KAAmD;AACxE;AACA;AACA;AACAd,YAAQC,GAAR,CAAY,SAAZ,EAAuBoB,EAAE7D,OAAzB;AACAsD,QAAI0B,IAAJ,GAAW,6CAAX;AACD,GAND;;AAQA;;AAEA;AACA;AACA;AACA,mBAAOxI,SAAP,CAAiBiF,OAAO;AACtB;AACA;AACA;AACA;AACAA,QAAIyB,OAAJ,CAAY2D,MAAZ,GAAqB,SAArB;;AAEA;AACA;AACA;AACApF,QAAIqF,EAAJ,CAAO,OAAP,EAAgBjD,KAAK;AACnB;AACA;AACA;AACArB,cAAQuE,KAAR,CAAc,eAAd,EAA+BlD,CAA/B;AACD,KALD;AAMD,GAhBD;;AAkBA;;AAEA;AACA;AACA;AACA,mBAAOzG,aAAP,CAAqB,OAAOkG,GAAP,EAAYC,IAAZ,KAAqB;AACxC;AACAD,QAAIzI,GAAJ,CAAQ,YAAR,EAAsByI,IAAIuD,MAA1B,EAFwC,CAEL;;AAEnC;AACA;AACA;AACAvD,QAAIa,KAAJ,CAAUpD,QAAV,CAAmB,EAAEC,MAAM,mBAAR,EAAnB;;AAEA;AACA;AACA,WAAOuC,MAAP;AACD,GAZD;AAaD;;AAED;AACA;AACA,MAAMyD,MAAM,MAAK;AAAA;AAAA;AAC0B,YAAQ,yCADlC;AAE0B,mBAAe,8CAFzC;AAG0B,aAAU;AAAA;AAAA,QAAK,WAAW,iBAAhB;AAAA;AAAA,KAHpC;AAIf;AAJe,CAAjB;;;;;;;;;;;;;kBCpMwBtM,O;AATxB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEe,SAASA,OAAT,CAAiBkG,KAAjB,EAAwBqG,MAAxB,EAAgC;AAC7C,MAAIA,OAAOjG,IAAP,KAAgB,mBAApB,EAAyC;AACvC;AACA;AACA;AACA,WAAOJ,MAAMsG,KAAN,CAAY;AACjBjG,aAAOL,MAAMK,KAAN,GAAc;AADJ,KAAZ,CAAP;AAGD;AACD,SAAOL,KAAP;AACD,C;;;;;;;;;;;;;ACSD;;;;AACA;;;;AAGA;;AAOA;;;;AAKA;;AAOA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AAGA;;;;AAIA;;;;AACA;;;;AACA;;;;AAGA;;AAVA;;;AAhBA;;AAEA;;;AAZA;AA/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;IA0CMuG,I,GAAN,MAAMA,IAAN,SAAmB,gBAAMC,SAAzB,CAAmC;AACjCrN,gBAAc;AACZ;AACA,SAAK6G,KAAL,GAAa;AACXyG,gBAAU,CAAC;AACTC,eAAO,OADE;AAETC,cAAM,IAFG;AAGT7I,gBAAQ;AAHC,OAAD,EAKR;AACE4I,eAAO,WADT;AAEEC,cAAM,IAFR;AAGE7I,gBAAQ;AAHV,OALQ,CADC;;AAYX8I,gBAAU;AAZC,KAAb,EAcE,KAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAdpB;AAeD;;AAEDD,eAAa;AACX,QAAIpF,MAAM,oJAAV;AACAsF,UAAMtF,GAAN,EACGuF,IADH,CACQ,UAAUJ,QAAV,EAAoB;AACxB,aAAOA,SAASK,IAAT,EAAP;AACD,KAHH,EAGKD,IAHL,CAGWJ,QAAD,IAAc,KAAKM,QAAL,CAAcC,OAAOC,MAAP,CAAc,EAAd,EAAkB,KAAKpH,KAAvB,EAA8B,EAAC4G,QAAD,EAA9B,CAAd,CAHxB;AAID;;AAEDS,uBAAqB;AACnB,SAAKR,UAAL;AACD;;AAEDpJ,WAAS;AACP,QAAI,KAAKuC,KAAL,CAAW4G,QAAX,IAAuB,EAA3B,EAA+B;AAC/B,QAAI,KAAK5G,KAAL,CAAW4G,QAAX,CAAoBU,MAApB,KAA+BC,SAAnC,EAA8C,OAAO;AAAA;AAAA;AAAA;AAAA,KAAP;AAC9C;AACA3F,YAAQC,GAAR,CAAY,KAAK7B,KAAL,CAAW4G,QAAvB;AACA;AACA;AACA,UAAMU,SAAS,KAAKtH,KAAL,CAAW4G,QAAX,CAAoBU,MAApB,CAA2B/G,GAA3B,CAAgCiH,CAAD,IAAO;AACjD,aAAO;AACLd,eAAOc,EAAE,CAAF,CADF;AAELb,cAAMa,EAAE,CAAF,CAFD;AAGL1J,gBAAQ0J,EAAE,CAAF,CAHH;AAILC,kBAAUD,EAAE,CAAF,CAJL;AAKLnH,eAAOmH,EAAE,CAAF,CALF;AAMLE,sBAAcF,EAAE,CAAF;AANT,OAAP;AAQD,KATY,CAAf;AAWA,UAAMG,QAAQ,iBAAEC,MAAF,CAASN,MAAT,EAAkB,CAACE,CAAD,EAAIK,CAAJ,KAAU;AACxC,UAAGA,KAAK,CAAR,EAAU,OAAO,KAAP;AACV,UAAGL,EAAEM,MAAF,GAAW,CAAd,EAAgB,OAAO,KAAP;AAChB,UAAGN,EAAEd,KAAF,KAAY,EAAZ,IAAkBc,EAAEd,KAAF,KAAYa,SAAjC,EAA2C,OAAO,KAAP;AAC3C,UAAGC,EAAEb,IAAF,KAAW,EAAd,EAAiB,OAAO,KAAP;AACjB,aAAO,IAAP;AACD,KANa,CAAd;AAOA/E,YAAQC,GAAR,CAAY8F,KAAZ;AACA,UAAMI,QAAQJ,MAAMpH,GAAN,CAAU,CAACyH,CAAD,EAAIH,CAAJ,KAAU;AAChC,aAAO;AAAA;AAAA,UAAK,KAAKA,CAAV,EAAa,WAAW,eAAII,IAA5B;AAAkC,+DAAc,OAAOD,EAAEtB,KAAvB,EAA8B,MAAMsB,EAAErB,IAAtC,EAA4C,QAAQqB,EAAElK,MAAtD,EAA8D,UAAUkK,EAAEP,QAA1E,EAAoF,OAAOO,EAAE3H,KAA7F,EAAoG,cAAc2H,EAAEN,YAApH;AAAlC,OAAP;AAED,KAHa,CAAd;AAIA,WAAO;AAAA;AAAA,QAAK,WAAW,eAAIQ,WAApB;AACL;AACE,eAAM,yBADR;AAEE,cAAM,CAAC;AACLrI,gBAAM,aADD;AAELsI,mBAAS;AAFJ,SAAD,CAFR,GADK;AAOL;AAAA;AAAA;AAAA;AAAA,OAPK;AAQL;AAAA;AAAA,UAAK,WAAW,eAAIC,WAApB;AACGL;AADH;AARK,KAAP;AAaD;AA3EgC,C;;AATnC;AACA;;;AAfA;;AAEA;AACA;AACA;;;AAZA;;kBA6GexB,I;;;;;;;AClJf,eAAe,kCAAkC,yDAAyD,gCAAgC,0DAA0D,qCAAqC,oCAAoC,gCAAgC,gDAAgD,qCAAqC,gCAAgC,gCAAgC,iBAAiB,GAAG,GAAG,SAAS;AACle,sBAAsB,oDAAoD,aAAa,qBAAqB,GAAG,+CAA+C;;;AAG9J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qB;;;;;;;ACrBA,eAAe,kCAAkC,oCAAoC,gCAAgC,kBAAkB,2BAA2B,iCAAiC,iCAAiC,qCAAqC,oCAAoC,6BAA6B,oDAAoD,GAAG,SAAS;AAC1Y,sBAAsB,qCAAqC,WAAW,+CAA+C;;;AAGrH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA,qB;;;;;;ACrBA,wC;;;;;;ACAA;AACA;AACA,E;;;;;;ACFA;AACA;AACA;AACA,E;;;;;;ACHA;AACA;AACA,E;;;;;;ACFA;AACA;AACA,E;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA,E;;;;;;ACNA,wG;;;;;;;;;;;;;AC4BA;;;;AAGA;;AAOA;;;;AAKA;;AAOA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AAGA;;;;;;AAGA;;AAfA;;AAEA;AACA;AACA;;;AAZA;AArCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;kBAmCgB3I,KAAD,IAAW;;AAExB,MAAIyK,gBAAgB;AAClB,kBAAc,mBADI;AAElB,iBAAa,mBAFK;AAGlB,cAAU,mBAHQ;AAIlB,iBAAa;AAJK,GAApB;AAMA,WAASC,SAAT,CAAmBxK,MAAnB,EAA2B;AACzB,WAAOuK,cAAcvK,MAAd,CAAP;AACD;AACD,MAAI,EAAC2J,QAAD,EAAW3J,MAAX,EAAmBuC,KAAnB,EAA0BqH,YAA1B,KAA0C9J,KAA9C;AACA,MAAI,CAACE,MAAL,EAAaA,SAAS,SAAT;AACb,MAAGF,MAAMyC,KAAN,IAAekH,SAAf,IAA4B3J,MAAMyC,KAAN,IAAe,EAA9C,EAAiD;AAC/C,UAAMkI,UAAUlI,SAASqH,gBAAgBH,SAAhB,GAA4B,MAAMG,YAAlC,GAAiD,EAA1D,CAAhB;AACA,QAAIc,YAAY;AAAA;AAAA,QAAM,WAAW,mBAAjB;AAAuCD;AAAvC,KAAhB;AACD;AACD,WAASE,YAAT,GAAwB;AACtB,QAAIC,QAAQ,CACV9K,MAAM8I,KAAN,CAAYiC,KAAZ,CAAkB,GAAlB,EAAuBC,IAAvB,CAA4B,GAA5B,CADU,EAEVhL,MAAM+I,IAAN,CAAWgC,KAAX,CAAiB,GAAjB,EAAsBC,IAAtB,CAA2B,GAA3B,CAFU,EAGVA,IAHU,CAGL,GAHK,CAAZ;AAIA,WAAO,uCAAuCF,KAA9C;AACD;AACD,SAEE;AAAA;AAAA;AACE;AAAA;AAAA,QAAK,WAAW,mBAAhB;AACE;AAAA;AAAA,UAAK,WAAW,uCAAhB,EAAyD,SAAUG,KAAD,IAAW;AAACA,kBAAMC,cAAN,GAAwBC,OAAOC,IAAP,CAAYP,cAAZ;AAA4B,WAAlI;AACE;AAAA;AAAA,YAAI,KAAK,CAAT;AAAa7K,gBAAM8I;AAAnB,SADF;AACgC;AAAA;AAAA,YAAI,KAAK,CAAT;AAAa9I,gBAAM+I;AAAnB,SADhC;AAEE;AAAA;AAAA,YAAG,KAAK,CAAR;AAAYc;AAAZ,SAFF;AAGE;AAAA;AAAA,YAAK,WAAW,eAAIwB,QAApB,EAA8B,KAAK,CAAnC;AACE;AAAA;AAAA,cAAM,WAAW,oBAAoB,GAApB,GAA0BZ,cAAcvK,MAAd,CAA3C;AAAmEA;AAAnE,WADF;AAEG0K,wBAAcjB,SAAd,GAA0BiB,SAA1B,GAAsC;AAFzC;AAHF;AADF;AADF,GAFF;AAeD,C;;AA7CD;;;AAhBA;;AAEA;;;AAZA,2B;;;;;;AC9BA;AACA;AACA;AACA;AACA,E;;;;;;;;;;;;ACJA,yD;;;;;;;;;;;;ACAA;AACA;;AAEA;AACO,MAAM3O,oBAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAb;;AA8BP;AACO,MAAMkC,sBAAQ;;;;;;;;;;;;;;;;;;CAAd,C;;;;;;;;;;;;;AC7BP;;AAMA;;AAEA;AACA;AACA;AACA,eAAemN,UAAf,GAA4B;AAC1B,SAAO;AACL7J,UAAO,mCAAkC,IAAI8J,IAAJ,EAAW;AAD/C,GAAP;AAGD;;AAED;AACA;AAxBA;;AAEA;AACA;;AAEA;AAoBA,MAAMC,UAAU,+BAAsB;AACpCvJ,QAAM,SAD8B;AAEpCwJ,eAAa,wBAFuB;AAGpCC,WAAS;AACP,WAAO;AACLjK,YAAM;AACJe,oCADI;AAEJmJ,gBAAQC,GAAR,EAAa;AACX,iBAAOA,IAAInK,IAAX;AACD;AAJG;AADD,KAAP;AAQD;AAZmC,CAAtB,CAAhB;;AAeA;AACA,MAAMoK,QAAQ,+BAAsB;AAClC5J,QAAM,OAD4B;AAElCwJ,eAAa,mBAFqB;AAGlCC,WAAS;AACP,WAAO;AACLlK,eAAS;AACPgB,cAAMgJ,OADC;AAEPG,kBAAU;AACR,iBAAOL,YAAP;AACD;AAJM;AADJ,KAAP;AAQD;AAZiC,CAAtB,CAAd;;AAeA;AACA;AACA;kBACe,2BAAkB;AAC/BR,SAAOe;AADwB,CAAlB,C;;;;;;;;;;;;;kQC3Df;;AAEA;;;;;;;;;AASA;AACA;;AAEA;;;AAKA;;;kBA0CwBC,c;;AA9CxB;;AACA;;;;AACA;;;;AAGA;;;;;;AAEA;;AAEA;AACA,MAAMC,WAAW,CAAC,EAAE,CAAC,IAAD,IAAWZ,OAAO9E,SAApB,CAAlB;;AAEA;AACA;AACA;AACA,SAAS2F,MAAT,CAAgB9P,UAAU,IAA1B,EAAgC;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,QAAMkO,IAAIb,OAAOC,MAAP,CAAc,EAAd,EACR,GAAG,GAAGyC,MAAH,CAAU,CAAC,GAAG,iBAAOzQ,QAAX,EAAqBmH,GAArB,CAAyBuJ,QAAQ;AAC5C,KAACA,IAAI,CAAJ,CAAD,GAAUhQ,UAAU,SAASiQ,cAAT,CAAwB/J,KAAxB,EAA+BqG,MAA/B,EAAuC;AACzD;AACA;AACA;AACA,UAAI,OAAOrG,KAAP,KAAiB,WAArB,EAAkC,OAAO,EAAP;;AAElC;AACA,aAAO8J,IAAI,CAAJ,EAAOhQ,OAAP,CAAekG,KAAf,EAAsBqG,MAAtB,CAAP;AACD,KARS,GAQNyD,IAAI,CAAJ,EAAO/P;AATiC,GAAR,CAAzB,CAAV,CADK,CAAV;;AAcA;AACA,MAAID,OAAJ,EAAa,OAAOkO,CAAP;;AAEb;AACA;AACA,SAAOb,OAAOC,MAAP,CAAc,EAAd,EAAkB,GAAGD,OAAO6C,IAAP,CAAYhC,CAAZ,EAAezH,GAAf,CAAmB1G,QAAQ;AACrD,KAACA,GAAD,GAAO,iCAAW8P,YAAaZ,OAAO9E,SAAP,CAAiBpK,GAAjB,CAAd,IAAyCmO,EAAEnO,GAAF,CAAnD;AAD8C,GAAR,CAAnB,CAArB,CAAP;AAGD;;AAEc,SAAS6P,cAAT,CAAwBO,YAAxB,EAAsC;AACnD,QAAM1G,QAAQ;AACZ;AACA;AACA;AACEC,YAAQyG,aAAanQ,OAAb;AADV,KAEK8P,QAFL,EAHY;AAOZ;AAPY;AASVpG,YAASmG,YAAYZ,OAAO9E,SAAP,CAAiBT,MAA9B,IAAyC;AATvC,KAUPoG,OAAO,KAAP,CAVO,GAYZ,oBACE,4BACEK,aAAa1O,UAAb,EADF,uBADF;AAKE;AACA;AACC,QAAD,GAA0EwN,OAAOmB,4BAAP,EAA1E,GAAkHC,KAAKA,CAPzH,CAZY,CAAd;;AAuBA,SAAO5G,KAAP;AACD,C;;;;;;ACtFD,kC;;;;;;ACAA,wC;;;;;;ACAA,+C;;;;;;;;;;;;;ACMA;;;;AACA;;;;;;AAEA;;AATA;;AAEA;;AAEA;AACA;AAMA,MAAM6G,OAAO,CAAC,EAAEC,IAAF,EAAQzJ,OAAR,EAAiBmI,MAAjB,EAAyBpI,GAAzB,EAA8BhD,QAA9B,EAAD,KACX;AAAA;AAAA,IAAM,MAAK,IAAX,EAAgB,QAAO,uBAAvB;AACE;AAAA;AAAA;AACE,4CAAM,SAAQ,OAAd,GADF;AAEE,4CAAM,WAAU,iBAAhB,EAAkC,SAAQ,SAA1C,GAFF;AAGE,4CAAM,WAAU,kBAAhB,EAAmC,SAAQ,IAA3C,GAHF;AAIE,4CAAM,MAAK,UAAX,EAAsB,SAAQ,qCAA9B,GAJF;AAKG0M,SAAKC,IAAL,CAAUC,WAAV,EALH;AAME,4CAAM,KAAI,YAAV,EAAuB,MAAM5J,GAA7B,GANF;AAOG0J,SAAKG,KAAL,CAAWD,WAAX;AAPH,GADF;AAUE;AAAA;AAAA;AACE;AAAA;AAAA,QAAK,IAAG,MAAR;AAAgB5M;AAAhB,KADF;AAEE;AACE,+BAAyB;AACvB8M,gBAAQtD,OAAO6C,IAAP,CAAYjB,MAAZ,EAAoB2B,MAApB,CACN,CAACC,GAAD,EAAM9Q,GAAN,KAAc8Q,OAAQ,UAAS9Q,GAAI,IAAGkM,KAAKC,SAAL,CAAe+C,OAAOlP,GAAP,CAAf,CAA4B,GAD5D,EAEN,EAFM;AADe,OAD3B,GAFF;AAQG+G,YAAQL,GAAR,CAAYqK,OAAO,0CAAQ,KAAKA,GAAb,EAAkB,KAAKA,GAAvB,GAAnB;AARH;AAVF,CADF;;AAwBAR,KAAKrM,SAAL,GAAiB;AACfsM,QAAM,oBAAU1L,MAAV,CAAiBV,UADR;AAEf8K,UAAQ,oBAAUpK,MAAV,CAAiBV,UAFV;AAGf2C,WAAS,oBAAUiK,OAAV,CAAkB,oBAAUnM,MAA5B,EAAoCT,UAH9B;AAIf0C,OAAK,oBAAUjC,MAAV,CAAiBT,UAJP;AAKfN,YAAU,oBAAUmN,OAAV,CAAkB7M;AALb,CAAjB;;kBAQemM,I;;;;;;;;;;;;QCvBCW,Y,GAAAA,Y;QAOAC,mB,GAAAA,mB;QAcAC,a,GAAAA,a;;AAnChB;;AAKA;;;;AAGA;;;;AAEA;;AAEA;AACA;;;AAXA;;AAEA;AAUO,SAASF,YAAT,CAAsBlQ,MAAM,EAA5B,EAAgC;AACrC,SAAO,8BAAiBsM,OAAOC,MAAP,CAAc;AACpC8D,uBAAmBlL,SAASA,MAAMwD;AADE,GAAd,EAErB,iBAAO/J,mBAFc,EAEOoB,GAFP,CAAjB,CAAP;AAGD;;AAED;;;AAbA;AAbA;AACA;;AAEA;;AAEA;AAsBO,SAASmQ,mBAAT,CAA6B1Q,GAA7B,EAAkC;AACvC,QAAM2K,mBAAmB,yCAAuB;AAC9C3K,OAD8C;AAE9C6Q,UAAM,iBAAO3R;AAFiC,GAAvB,CAAzB;;AAKA;AACAyL,mBAAiBhE,GAAjB,CAAqB,iBAAO3H,gBAAP,CAAwBiH,GAAxB,CAA4B4J,MAAM,EAAEiB,iBAAiBjB,CAAnB,EAAN,CAA5B,CAArB;AACAlF,mBAAiBoG,QAAjB,CAA0B,iBAAO9R,eAAP,CAAuBgH,GAAvB,CAA2B4J,MAAM,EAAEmB,gBAAgBnB,CAAlB,EAAN,CAA3B,CAA1B;;AAEA,SAAOlF,gBAAP;AACD;;AAED;AACO,SAASgG,aAAT,GAAyB;AAC9B;AACA;AACA,QAAM3Q,MAAM,iBAAOX,aAAP,GACP,GAAE,wBAAe,GAAE,iBAAOD,eAAgB,EADnC,GACuC,iBAAOA,eAD1D;;AAGA,SAAOqR,aAAa;AAClB9F,sBAAkB+F,oBAAoB1Q,GAApB;AADA,GAAb,CAAP;AAGD,C;;;;;;;;;AClDD;AACA;;AAEA,MAAMsI,OAAO,mBAAA0C,CAAQ,EAAR,CAAb;;AAEA;;AAEA;AACA,MAAMzC,OAAOD,KAAKgG,IAAL,CAAU2C,SAAV,EAAqB,IAArB,CAAb;;AAEAC,OAAOC,OAAP,GAAiB;AACf;AACA5I,MAFe;;AAIf;AACA;AACA6I,OAAK9I,KAAKgG,IAAL,CAAU/F,IAAV,EAAgB,KAAhB,CANU;;AAQf;AACA;AACA8I,SAAO/I,KAAKgG,IAAL,CAAU/F,IAAV,EAAgB,KAAhB,EAAuB,OAAvB,CAVQ;;AAYf;AACA+I,WAAShJ,KAAKgG,IAAL,CAAU/F,IAAV,EAAgB,KAAhB,EAAuB,SAAvB,CAbM;;AAef;AACAgJ,SAAOjJ,KAAKgG,IAAL,CAAU/F,IAAV,EAAgB,KAAhB,EAAuB,OAAvB,CAhBQ;;AAkBf;AACA+H,OAAKhI,KAAKgG,IAAL,CAAU/F,IAAV,EAAgB,KAAhB,CAnBU;;AAqBf;AACA;AACAiJ,UAAQlJ,KAAKgG,IAAL,CAAU/F,IAAV,EAAgB,QAAhB,CAvBO;;AAyBf;AACAkJ,QAAMnJ,KAAKgG,IAAL,CAAU/F,IAAV,EAAgB,MAAhB,CA1BS;;AA4Bf;AACAG,WAASJ,KAAK2G,OAAL,CAAa1G,IAAb,EAAmB,MAAnB,EAA2B,KAA3B,CA7BM;;AA+Bf;AACA;AACAC,UAAQF,KAAKgG,IAAL,CAAU/F,IAAV,EAAgB,MAAhB,EAAwB,QAAxB;AAjCO,CAAjB,C;;;;;;ACVA,iC;;;;;;ACAA,2C;;;;;;ACAA,mC","file":"server_dev.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 15);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9d98233dd55827614a77","module.exports = require(\"react\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react\"\n// module id = 0\n// module chunks = 0","module.exports = require(\"prop-types\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"prop-types\"\n// module id = 1\n// module chunks = 0","// Simple class to act as a singleton for app-wide configuration.\n\n// We'll start with a common config that can be extended separately by the\n// server/client, to provide environment-specific functionality\nclass Common {\n  constructor() {\n    // Store reducers in a `Map`, for easy key retrieval\n    this.reducers = new Map();\n\n    // Apollo (middle|after)ware\n    this.apolloMiddleware = [];\n    this.apolloAfterware = [];\n    this.apolloNetworkOptions = {};\n    this.apolloClientOptions = {};\n\n    // GraphQL endpoint.  This needs setting via either `config.enableGraphQLServer()`\n    // or `config.setGraphQLEndpoint()`\n    this.graphQLEndpoint = null;\n\n    // Set to true if we're using an internal GraphQL server\n    this.graphQLServer = false;\n  }\n\n  /* REDUX */\n\n  // Adds a new reducer.  Accepts a `key` string, a `reducer` function, and a\n  // (by default empty) `initialState` object, which will ultimately become immutable\n  addReducer(key, reducer, initialState = {}) {\n    if (typeof reducer !== 'function') {\n      throw new Error(`Can't add reducer for '${key}' - reducer must be a function`);\n    }\n    this.reducers.set(key, {\n      reducer,\n      initialState,\n    });\n  }\n\n  /* GRAPHQL */\n\n  // Enables internal GraphQL server.  Default GraphQL and GraphiQL endpoints\n  // can be overridden\n  enableGraphQLServer(endpoint = '/graphql', graphiQL = true) {\n    this.graphQLServer = true;\n    this.graphQLEndpoint = endpoint;\n    this.graphiQL = graphiQL;\n  }\n\n  // Set an external GraphQL URI for use with Apollo\n  setGraphQLEndpoint(uri, graphiQL = true) {\n    this.graphQLEndpoint = uri;\n    this.graphiQL = graphiQL;\n  }\n\n  // Register Apollo middleware function\n  addApolloMiddleware(middlewareFunc) {\n    this.apolloMiddleware.push(middlewareFunc);\n  }\n\n  // Register Apollo afterware function\n  addApolloAfterware(afterwareFunc) {\n    this.apolloAfterware.push(afterwareFunc);\n  }\n\n  // Apollo Client options.  These will be merged in with the `createClient`\n  // default options defined in `kit/lib/apollo.js`\n  setApolloClientOptions(opt = {}) {\n    this.apolloClientOptions = opt;\n  }\n\n  // Apollo Network options.  These will be merged in with the `createNetworkInterface`\n  // default options defined in `kit/lib/apollo.js`\n  setApolloNetworkOptions(opt = {}) {\n    this.apolloNetworkOptions = opt;\n  }\n}\n\n// Placeholder for the class we'll attach\nlet Config;\n\n// Server Config extensions.  This is wrapped in a `SERVER` block to avoid\n// adding unnecessary functionality to the client bundle.  Every byte counts!\nif (SERVER) {\n  Config = class ServerConfig extends Common {\n    constructor() {\n      super();\n      // Create a set for routes -- to retrieve based on insertion order\n      this.routes = new Set();\n\n      // Koa application function. But default, this is null\n      this.koaAppFunc = null;\n\n      // Flag for setting whether plain HTTP should be disabled\n      this.enableHTTP = true;\n\n      // Force SSL. Rewrites all non-SSL queries to SSL.  False, by default.\n      this.enableForceSSL = false;\n\n      // Options for enabling SSL. By default, this is null. If SSL is enabled\n      // in userland, this would instead hold an object of options\n      this.sslOptions = null;\n\n      // Custom middleware -- again, based on insertion order\n      this.middleware = new Set();\n\n      // GraphQL schema (if we're using an internal server)\n      this.graphQLSchema = null;\n\n      // Attach a GraphiQL IDE endpoint to our server?  By default - no.  If\n      // this === true, this will default to `/graphql`.  If it's a string, it'll\n      // default to the string value\n      this.graphiQL = false;\n\n      // Enable body parsing by default.  Leave `koa-bodyparser` opts as default\n      this.enableBodyParser = true;\n      this.bodyParserOptions = {};\n\n      // CORS options for `koa-cors`\n      this.corsOptions = {};\n    }\n\n    /* WEB SERVER / SSR */\n\n    // Get access to Koa's `app` instance, for adding custom instantiation\n    // or doing something that's not covered by other functions\n    getKoaApp(func) {\n      this.koaAppFunc = func;\n    }\n\n    // Enable SSL. Normally, you'd use an upstream proxy like Nginx to handle\n    // SSL. But if you want to run a 'bare' Koa HTTPS web server, you can pass\n    // in the certificate details here and it'll respond to SSL requests\n    enableSSL(opt) {\n      // At a minimum, we should have `key` and `cert` -- check for those\n      if (typeof opt !== 'object' || !opt.key || !opt.cert) {\n        throw new Error('Cannot enable SSL. Missing `key` and/or `cert`');\n      }\n      this.sslOptions = opt;\n    }\n\n    // Force SSL. Rewrites all non-SSL queries to SSL. Any options here are\n    // passed to `koa-sslify`, the SSL enforcement middleware\n    forceSSL(opt = {}) {\n      this.enableForceSSL = opt;\n    }\n\n    // Disable plain HTTP.  Note this should only be used if you've also set\n    // `enableSSL()` and you don't want dual-HTTP+SSL config\n    disableHTTP() {\n      this.enableHTTP = false;\n    }\n\n    // Disable the optional `koa-bodyparser`, to prevent POST data being sent to\n    // each request.  By default, body parsing is enabled.\n    disableBodyParser() {\n      this.enableBodyParser = false;\n    }\n\n    setBodyParserOptions(opt = {}) {\n      this.bodyParserOptions = opt;\n    }\n\n    // 404 handler for the server.  By default, `kit/entry/server.js` will\n    // simply return a 404 status code without modifying the HTML render.  By\n    // setting a handler here, this will be returned instead\n    set404Handler(func) {\n      if (typeof func !== 'function') {\n        throw new Error('404 handler must be a function');\n      }\n      this.handler404 = func;\n    }\n\n    // Error handler.  If this isn't defined, the server will simply return a\n    // 'There was an error. Please try again later.' message, and log the output\n    // to the console.  Override that behaviour by passing a (e, ctx, next) -> {} func\n    setErrorHandler(func) {\n      if (typeof func !== 'function') {\n        throw new Error('Error handler must be a function');\n      }\n      this.errorHandler = func;\n    }\n\n    // Add custom middleware.  This should be an async func, for use with Koa\n    addMiddleware(middlewareFunc) {\n      this.middleware.add(middlewareFunc);\n    }\n\n    // Adds a custom server route to attach to our Koa router\n    addRoute(method, route, ...handlers) {\n      this.routes.add({\n        method,\n        route,\n        handlers,\n      });\n    }\n\n    // Adds custom GET route\n    addGetRoute(route, ...handlers) {\n      this.addRoute('get', route, ...handlers);\n    }\n\n    // Adds custom POST route\n    addPostRoute(route, ...handlers) {\n      this.addRoute('post', route, ...handlers);\n    }\n\n    // Adds custom PUT route\n    addPutRoute(route, ...handlers) {\n      this.addRoute('put', route, ...handlers);\n    }\n\n    // Adds custom PATCH route\n    addPatchRoute(route, ...handlers) {\n      this.addRoute('patch', route, ...handlers);\n    }\n\n    // Adds custom DELETE route\n    addDeleteRoute(route, ...handlers) {\n      this.addRoute('delete', route, ...handlers);\n    }\n\n    // Set the GraphQL schema. This should only be called on the server, otherwise\n    // the bundle size passed by the `schema` object will be unnecessarily inflated\n    setGraphQLSchema(schema) {\n      this.graphQLSchema = schema;\n    }\n\n    // CORS options, for `koa-cors` instantiation\n    setCORSOptions(opt = {}) {\n      this.corsOptions = opt;\n    }\n  };\n} else {\n  // For the client config, we'll extend `Common` by default -- but if we need\n  // anything unique to the browser in the future, we'd add it here...\n  Config = class ClientConfig extends Common {};\n}\n\n// Since there's only one `Config` instance globally, we'll create the new\n// instance here and export it.  This will then provide any subsequent imports\n// with the same object, so we can add settings to a common config\nexport default new Config();\n\n\n\n// WEBPACK FOOTER //\n// ./kit/config.js","module.exports = require(\"react-apollo\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-apollo\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"react-helmet\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-helmet\"\n// module id = 4\n// module chunks = 0","module.exports = require(\"react-router-dom\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-router-dom\"\n// module id = 5\n// module chunks = 0","/* eslint-disable no-param-reassign */\n\n// ----------------------\n// IMPORTS\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect as ReactRouterRedirect } from 'react-router-dom';\n\n// ----------------------\n\n// <Status code=\"xxx\"> component.  Updates the context router's context, which\n// can be used by the server handler to respond to the status on the server.\nclass Status extends React.PureComponent {\n  static propTypes = {\n    code: PropTypes.number.isRequired,\n    children: PropTypes.node,\n  }\n\n  static defaultProps = {\n    children: null,\n  }\n\n  render() {\n    const { code, children } = this.props;\n    return (\n      <Route render={({ staticContext }) => {\n        if (staticContext) {\n          staticContext.status = code;\n        }\n        return children;\n      }} />\n    );\n  }\n}\n\n// <NotFound> component.  If this renders on the server in development mode,\n// it will attempt to proxyify the request to the upstream `webpack-dev-server`.\n// In production, it will issue a hard 404 and render.  In the browser, it will\n// simply render.\nexport class NotFound extends React.PureComponent {\n  static propTypes = {\n    children: PropTypes.node,\n  }\n\n  static defaultProps = {\n    children: null,\n  }\n\n  render() {\n    const { children } = this.props;\n\n    return (\n      <Status code={404}>\n        {children}\n      </Status>\n    );\n  }\n}\n\n// <Redirect> component. Mirrors React Router's component by the same name,\n// except it sets a 301/302 status code for setting server-side HTTP headers.\nexport class Redirect extends React.PureComponent {\n  static propTypes = {\n    to: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.object,\n    ]).isRequired,\n    from: PropTypes.string,\n    push: PropTypes.bool,\n    permanent: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    from: null,\n    push: false,\n    permanent: false,\n  }\n\n  render() {\n    const { to, from, push, permanent } = this.props;\n    const code = permanent ? 301 : 302;\n    return (\n      <Status code={code}>\n        <ReactRouterRedirect to={to} from={from} push={push} />\n      </Status>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./kit/lib/routing.js","module.exports = require(\"chalk\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"chalk\"\n// module id = 7\n// module chunks = 0","/* eslint-disable import/prefer-default-export */\n\n// Environment-aware functions\n\n// Get the protocol://host:port of where the current server would bind\nexport function getServerURL(host = process.env.HOST, port = process.env.PORT, allowSSL = true) {\n  // Check for SSL\n  if (allowSSL && process.env.SSL_PORT) {\n    const stub = `https://${host || process.env.HOST}`;\n\n    // If we're on port 443, that's 'regular' SSL so no need to specify port\n    if (process.env.SSL_PORT === '443') return stub;\n    return `${stub}:${process.env.SSL_PORT}`;\n  }\n\n  // Plain HTTP\n  const stub = `http://${host || process.env.HOST}`;\n\n  // If we're on port 80, that's 'regular' HTTP so no need to specify port\n  if (port === '80') return stub;\n  return `${stub}:${port}`;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./kit/lib/env.js","module.exports = require(\"graphql\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"graphql\"\n// module id = 9\n// module chunks = 0","// Now, let's create a GraphQL-enabled component...\n\n// ... then, let's create the component and decorate it with the `graphql`\n// HOC that will automatically populate `this.props` with the query data\n// once the GraphQL API request has been completed\n\n// ----------------------\n// IMPORTS\n\n/* NPM */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// GraphQL\nimport { graphql } from 'react-apollo';\n\n/* App */\n\n// GraphQL queries.  Looking at this file demonstrates how to import fragments.\n// Webpack will compile this into inline GraphQL for us, so we can pass the\n// query to components using the @graphql decorator\nimport allMessages from 'src/graphql/queries/all_messages.gql';\n\n// ----------------------\n\n// Since this component needs to 'listen' to GraphQL data, we wrap it in\n// `react-apollo`'s `graphql` HOC/decorator and pass in the query that this\n// component requires.   Note: This is not to be confused with the `graphql`\n// lib, which is used on the server-side to initially define the schema\n@graphql(allMessages)\nexport default class GraphQLMessage extends React.PureComponent {\n  static propTypes = {\n    data: PropTypes.shape({\n      message: PropTypes.shape({\n        text: PropTypes.string,\n      }),\n    }),\n  }\n\n  static defaultProps = {\n    data: {\n      message: {\n        text: null,\n      },\n    },\n  }\n\n  render() {\n    const { data } = this.props;\n\n    // Since we're dealing with async GraphQL data, we defend against the\n    // data not yet being loaded by checking to see that we have the `message`\n    // key on our returned object\n    const message = data.message && data.message.text;\n\n    // Apollo will tell us whether we're still loading.  We can also use this\n    // check to ensure we have a fully returned response\n    const isLoading = data.loading ? 'yes' : 'nope';\n    return (\n      <div>\n        <h2>Message from GraphQL server: <em>{message}</em></h2>\n        <h2>Currently loading?: {isLoading}</h2>\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/graphql.js","// Demonstrates several components on one page, each with their own `export`.\n//\n// These are smaller components that <Main> imports, and changes depending\n// on the page route (via React Router).\n//\n// <WhenNotFound> demonstrates the use of <NotFound>, a ReactQL helper\n// component that signals to our web server that we have a 404 error, to handle\n// accordingly\n\n// ----------------------\n// IMPORTS\n\n/* NPM */\n\n// React\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/* ReactQL */\n\n// NotFound 404 handler for unknown routes\nimport { NotFound } from 'kit/lib/routing';\n\n// ----------------------\n\n// We'll display this <Home> component when we're on the / route\nexport const Home = () => (\n  <h1>You&apos;re on the home page - click another link above</h1>\n);\n\n// Helper component that will be conditionally shown when the route matches.\n// This gives you an idea how React Router v4 works -- we have a `match`\n// prop that gives us information on the route we can use within the component\nexport const Page = ({ match }) => (\n  <h1>Changed route: {match.params.name}</h1>\n);\n\n// Specify PropTypes if the `match` object, which is injected to props by\n// the <Route> component\nPage.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.object,\n  }).isRequired,\n};\n\n// Create a route that will be displayed when the code isn't found\nexport const WhenNotFound = () => (\n  <NotFound>\n    <h1>Unknown route - the 404 handler was triggered!</h1>\n  </NotFound>\n);\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/routes.js","// Component that demonstrates using a part of the Redux store\n// outside of Apollo.  We can use config.addReducer(key, reducer) in `src/app.js`\n// to add custom Redux reducers\n\n// ----------------------\n// IMPORTS\n\n/* NPM */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// HOC/decorator to listen to Redux store state\nimport { connect } from 'react-redux';\n\n// ----------------------\n\n// @connect accepts a function that takes the full Redux state, and then\n// returns the portion of state that our component cares about.  In this example,\n// we're listening to `state.counter`, which we can show inside the component\n@connect(state => ({ counter: state.counter }))\nexport default class ReduxCounter extends React.PureComponent {\n  static propTypes = {\n    counter: PropTypes.shape({\n      count: PropTypes.number.isRequired,\n    }),\n  };\n\n  static defaultProps = {\n    counter: {\n      count: 0,\n    },\n  }\n\n  // Trigger the `INCREMENT_COUNTER` action in Redux, to add 1 to the total.\n  // Note: by using the `= () {}` format, we're implicitly binding the component\n  // to `this`, which is why we can use @connect's `.dispatch()` function that's\n  // passed in as a prop\n  triggerIncrement = () => {\n    this.props.dispatch({\n      type: 'INCREMENT_COUNTER',\n    });\n  }\n\n  render() {\n    const { count } = this.props.counter;\n    return (\n      <div>\n        <h2>Listening to Redux counter: {count}</h2>\n        <button onClick={this.triggerIncrement}>Increment</button>\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/redux.js","// Simple <Stats> component that displays our current environment.\n\n// ----------------------\n// IMPORTS\n\n/* NPM */\n\n// React\nimport React from 'react';\n\n/* App */\n\n// Styles\nimport css from './stats.scss';\n\n// ----------------------\n\nexport default () => {\n  // We can pull the environment from `process.env.NODE_ENV`, which is set\n  // to either 'development' | 'production' on both the server and in the browser\n  const info = [\n    ['Environment', process.env.NODE_ENV],\n  ];\n\n  return (\n    <ul className={css.data}>\n      {info.map(([key, val]) => (\n        <li key={key}>{key}: <span>{val}</span></li>\n      ))}\n    </ul>\n  );\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/stats.js","// Example of CSS, SASS and LESS styles being used together\n\n// ----------------------\n// IMPORTS\n\n/* NPM */\nimport React from 'react';\n\n/* App */\n\n// Styles\nimport css from './styles.css';\nimport sass from './styles.scss';\nimport less from './styles.less';\n\n// ----------------------\n\nexport default () => (\n  <ul className={css.styleExamples}>\n    <li className={css.example}>Styled by CSS</li>\n    <li className={sass.example}>Styled by SASS</li>\n    <li className={less.example}>Styled by LESS</li>\n  </ul>\n);\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/styles/index.js","/* eslint-disable no-console */\n\n// Production server entry point.  Spawns the server on default HOST:PORT\n\n// ----------------------\n// IMPORTS\n\n/* NPM */\n\n// Chalk terminal library\nimport chalk from 'chalk';\n\n/* Local */\n\n// Import console messages\nimport { logServerStarted } from 'kit/lib/console';\n\n// Extend the server base\nimport server, { createReactHandler, staticMiddleware } from './server';\n\n// ----------------------\n\n// Get manifest values\nconst css = '/assets/css/style.css';\nconst scripts = [\n  'vendor.js',\n  'browser.js'].map(key => `/${key}`);\n\n// Spawn the development server.\n// Runs inside an immediate `async` block, to await listening on ports\n(async () => {\n  const { app, router, listen } = server;\n\n  // Create proxy to tunnel requests to the browser `webpack-dev-server`\n  router.get('/*', createReactHandler(css, scripts));\n\n  // Connect the development routes to the server\n  app\n    .use(staticMiddleware())\n    .use(router.routes())\n    .use(router.allowedMethods());\n\n  // Spawn the server\n  listen();\n\n  // Log to the terminal that we're ready for action\n  logServerStarted({\n    type: 'server-side rendering',\n    chalk: chalk.bgYellow.black,\n  });\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./kit/entry/server_dev.js","/* eslint-disable import/prefer-default-export, no-console */\n\n\n// ----------------------\n// IMPORTS\n\n/* NPM */\n\n// Display a border around a message\nimport boxen from 'boxen';\n\n// Chalk library, to add colour to our console logs\nimport chalk from 'chalk';\n\n// IP library, for determining the local network interface\nimport ip from 'ip';\n\n/* ReactQL */\nimport { getServerURL } from './env';\n\n// ----------------------\n\nexport function logServerStarted(opt = {}) {\n  let message = chalk.green(`Running ${(opt.chalk || chalk.bold)(opt.type)} in ${chalk.bold(process.env.NODE_ENV)} mode\\n\\n`);\n  message += `- ${chalk.bold('Local:           ')} ${getServerURL(opt.host, opt.port, opt.allowSSL)}`;\n\n  try {\n    const url = getServerURL(ip.address(), opt.port, opt.allowSSL);\n    message += `\\n- ${chalk.bold('On Your Network: ')} ${url}`;\n  } catch (err) { /* ignore errors */ }\n\n  console.log(\n    boxen(message, {\n      padding: 1,\n      borderColor: 'green',\n      margin: 1,\n    }),\n  );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./kit/lib/console.js","module.exports = require(\"boxen\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"boxen\"\n// module id = 18\n// module chunks = 0","module.exports = require(\"ip\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ip\"\n// module id = 19\n// module chunks = 0","/* eslint-disable no-param-reassign, no-console */\n\n// Server entry point, for Webpack.  This will spawn a Koa web server\n// and listen for HTTP requests.  Clients will get a return render of React\n// or the file they have requested\n//\n// Note:  No HTTP optimisation is performed here (gzip, http/2, etc).  Node.js\n// will nearly always be slower than Nginx or an equivalent, dedicated proxy,\n// so it's usually better to leave that stuff to a faster upstream provider\n\n// ----------------------\n// IMPORTS\n\n/* Node */\n\n// For pre-pending a `<!DOCTYPE html>` stream to the server response\nimport { PassThrough } from 'stream';\n\n// HTTP & SSL servers.  We can use `config.enableSSL|disableHTTP()` to enable\n// HTTPS and disable plain HTTP respectively, so we'll use Node's core libs\n// for building both server types.\nimport http from 'http';\nimport https from 'https';\n\n/* NPM */\n\n// Patch global.`fetch` so that Apollo calls to GraphQL work\nimport 'isomorphic-fetch';\n\n// React UI\nimport React from 'react';\n\n// React utility to transform JSX to HTML (to send back to the client)\nimport ReactDOMServer from 'react-dom/server';\n\n// Koa 2 web server.  Handles incoming HTTP requests, and will serve back\n// the React render, or any of the static assets being compiled\nimport Koa from 'koa';\n\n// Apollo tools to connect to a GraphQL server.  We'll grab the\n// `ApolloProvider` HOC component, which will inject any 'listening' React\n// components with GraphQL data props.  We'll also use `getDataFromTree`\n// to await data being ready before rendering back HTML to the client\nimport { ApolloProvider, getDataFromTree } from 'react-apollo';\n\n// Enforce SSL, if required\nimport koaSSL from 'koa-sslify';\n\n// Enable cross-origin requests\nimport koaCors from 'kcors';\n\n// Static file handler\nimport koaSend from 'koa-send';\n\n// HTTP header hardening\nimport koaHelmet from 'koa-helmet';\n\n// Koa Router, for handling URL requests\nimport KoaRouter from 'koa-router';\n\n// High-precision timing, so we can debug response time to serve a request\nimport ms from 'microseconds';\n\n// React Router HOC for figuring out the exact React hierarchy to display\n// based on the URL\nimport { StaticRouter } from 'react-router';\n\n// <Helmet> component for retrieving <head> section, so we can set page\n// title, meta info, etc along with the initial HTML\nimport Helmet from 'react-helmet';\n\n// Import the Apollo GraphQL server, for Koa\nimport { graphqlKoa, graphiqlKoa } from 'apollo-server-koa';\n\n// Allow local GraphQL schema querying when using a built-in GraphQL server\nimport apolloLocalQuery from 'apollo-local-query';\n\n// Import all of the GraphQL lib, for use with our Apollo client connection\nimport * as graphql from 'graphql';\n\n/* ReactQL */\n\n// App entry point.  This must come first, because app.js will set-up the\n// server config that we'll use later\nimport App from 'src/app';\n\n// Custom redux store creator.  This will allow us to create a store 'outside'\n// of Apollo, so we can apply our own reducers and make use of the Redux dev\n// tools in the browser\nimport createNewStore from 'kit/lib/redux';\n\n// Initial view to send back HTML render\nimport Html from 'kit/views/ssr';\n\n// Grab the shared Apollo Client / network interface instantiation\nimport { getNetworkInterface, createClient } from 'kit/lib/apollo';\n\n// App settings, which we'll use to customise the server -- must be loaded\n// *after* app.js has been called, so the correct settings have been set\nimport config from 'kit/config';\n\n// Import paths.  We'll use this to figure out where our public folder is\n// so we can serve static files\nimport PATHS from 'config/paths';\n\n// ----------------------\n\n// Create a network layer based on settings.  This is an immediate function\n// that binds either the `localInterface` function (if there's a built-in\n// GraphQL) or `externalInterface` (if we're pointing outside of ReactQL)\nconst createNeworkInterface = (() => {\n  // For a local interface, we want to allow passing in the request's\n  // context object, which can then feed through to our GraphQL queries to\n  // extract pertinent information and manipulate the response\n  function localInterface(context) {\n    return apolloLocalQuery.createLocalInterface(\n      graphql,\n      config.graphQLSchema,\n      {\n        // Attach the request's context, which certain GraphQL queries might\n        // need for accessing cookies, auth headers, etc.\n        context,\n      },\n    );\n  }\n\n  function externalInterface() {\n    return getNetworkInterface(config.graphQLEndpoint);\n  }\n\n  return config.graphQLServer ? localInterface : externalInterface;\n})();\n\n// Static file middleware\nexport function staticMiddleware() {\n  return async function staticMiddlewareHandler(ctx, next) {\n    try {\n      if (ctx.path !== '/') {\n        return await koaSend(\n          ctx,\n          ctx.path,\n          process.env.NODE_ENV === 'production' ? {\n            root: PATHS.public,\n            immutable: true,\n          } : {\n            root: PATHS.distDev,\n          },\n        );\n      }\n    } catch (e) { /* Errors will fall through */ }\n    return next();\n  };\n}\n\n// Function to create a React handler, per the environment's correct\n// manifest files\nexport function createReactHandler(css = [], scripts = [], chunkManifest = {}) {\n  return async function reactHandler(ctx) {\n    const routeContext = {};\n\n    // Generate the HTML from our React tree.  We're wrapping the result\n    // in `react-router`'s <StaticRouter> which will pull out URL info and\n    // store it in our empty `route` object\n    const components = (\n      <StaticRouter location={ctx.request.url} context={routeContext}>\n        <ApolloProvider store={ctx.store} client={ctx.apollo}>\n          <App />\n        </ApolloProvider>\n      </StaticRouter>\n    );\n\n    // Wait for GraphQL data to be available in our initial render,\n    // before dumping HTML back to the client\n    await getDataFromTree(components);\n\n    // Handle redirects\n    if ([301, 302].includes(routeContext.status)) {\n      // 301 = permanent redirect, 302 = temporary\n      ctx.status = routeContext.status;\n\n      // Issue the new `Location:` header\n      ctx.redirect(routeContext.url);\n\n      // Return early -- no need to set a response body\n      return;\n    }\n\n    // Handle 404 Not Found\n    if (routeContext.status === 404) {\n      // By default, just set the status code to 404.  Or, we can use\n      // `config.set404Handler()` to pass in a custom handler func that takes\n      // the `ctx` and store\n\n      if (config.handler404) {\n        config.handler404(ctx);\n\n        // Return early -- no need to set a response body, because that should\n        // be taken care of by the custom 404 handler\n        return;\n      }\n\n      ctx.status = routeContext.status;\n    }\n\n    // Create a HTML stream, to send back to the browser\n    const htmlStream = new PassThrough();\n\n    // Prefix the doctype, so the browser knows to expect HTML5\n    htmlStream.write('<!DOCTYPE html>');\n\n    // Create a stream of the React render. We'll pass in the\n    // Helmet component to generate the <head> tag, as well as our Redux\n    // store state so that the browser can continue from the server\n    const reactStream = ReactDOMServer.renderToNodeStream(\n      <Html\n        head={Helmet.rewind()}\n        window={{\n          webpackManifest: chunkManifest,\n          __STATE__: ctx.store.getState(),\n        }}\n        css={css}\n        scripts={scripts}>\n        {components}\n      </Html>,\n    );\n\n    // Pipe the React stream to the HTML output\n    reactStream.pipe(htmlStream);\n\n    // Set the return type to `text/html`, and stream the response back to\n    // the client\n    ctx.type = 'text/html';\n    ctx.body = htmlStream;\n  };\n}\n\n// Build the router, based on our app's settings.  This will define which\n// Koa route handlers\nconst router = (new KoaRouter())\n  // Set-up a general purpose /ping route to check the server is alive\n  .get('/ping', async ctx => {\n    ctx.body = 'pong';\n  })\n\n  // Favicon.ico.  By default, we'll serve this as a 204 No Content.\n  // If /favicon.ico is available as a static file, it'll try that first\n  .get('/favicon.ico', async ctx => {\n    ctx.res.statusCode = 204;\n  });\n\n// Build the app instance, which we'll use to define middleware for Koa\n// as a precursor to handling routes\nconst app = new Koa()\n  // Adds CORS config\n  .use(koaCors(config.corsOptions))\n\n  // Preliminary security for HTTP headers\n  .use(koaHelmet())\n\n  // Error wrapper.  If an error manages to slip through the middleware\n  // chain, it will be caught and logged back here\n  .use(async (ctx, next) => {\n    try {\n      await next();\n    } catch (e) {\n      // If we have a custom error handler, use that - else simply log a\n      // message and return one to the user\n      if (typeof config.errorHandler === 'function') {\n        config.errorHandler(e, ctx, next);\n      } else {\n        console.log('Error:', e.message);\n        ctx.body = 'There was an error. Please try again later.';\n      }\n    }\n  })\n\n  // It's useful to see how long a request takes to respond.  Add the\n  // timing to a HTTP Response header\n  .use(async (ctx, next) => {\n    const start = ms.now();\n    await next();\n    const end = ms.parse(ms.since(start));\n    const total = end.microseconds + (end.milliseconds * 1e3) + (end.seconds * 1e6);\n    ctx.set('Response-Time', `${total / 1e3}ms`);\n  })\n\n  // Create a new Apollo client and Redux store per request.  This will be\n  // stored on the `ctx` object, making it available for the React handler or\n  // any subsequent route/middleware\n  .use(async (ctx, next) => {\n    // Create a new server Apollo client for this request\n    ctx.apollo = createClient({\n      ssrMode: true,\n      // Create a network request.  If we're running an internal server, this\n      // will be a function that accepts the request's context, to feed through\n      // to the GraphQL schema\n      networkInterface: createNeworkInterface(ctx),\n    });\n\n    // Create a new Redux store for this request\n    ctx.store = createNewStore(ctx.apollo);\n\n    // Pass to the next middleware in the chain: React, custom middleware, etc\n    return next();\n  });\n\n/* FORCE SSL */\n\n// Middleware to re-write HTTP requests to SSL, if required.\nif (config.enableForceSSL) {\n  app.use(koaSSL(config.enableForceSSL));\n}\n\n// Attach custom middleware\nconfig.middleware.forEach(middlewareFunc => app.use(middlewareFunc));\n\n// Attach an internal GraphQL server, if we need one\nif (config.graphQLServer) {\n  // Attach the GraphQL schema to the server, and hook it up to the endpoint\n  // to listen to POST requests\n  router.post(\n    config.graphQLEndpoint,\n    graphqlKoa(context => ({\n      // Bind the current request context, so it's accessible within GraphQL\n      context,\n      // Attach the GraphQL schema\n      schema: config.graphQLSchema,\n    })),\n  );\n}\n\n// Do we need the GraphiQL query interface?  This can be used if we have an\n// internal GraphQL server, or if we're pointing to an external server.  First,\n// we check if `config.graphiql` === `true` to see if we need one...\n\nif (config.graphiQL) {\n  // The GraphiQL endpoint default depends on this order of precedence:\n  // explicit -> internal GraphQL server endpoint -> /graphql\n  let graphiQLEndpoint;\n\n  if (typeof config.graphiQL === 'string') {\n    // Since we've explicitly passed a string, we'll use that as the endpoint\n    graphiQLEndpoint = config.graphiQL;\n  } else if (config.graphQLServer) {\n    // If we have an internal GraphQL server, AND we haven't set a string,\n    // the default GraphiQL path should be the same as the server endpoint\n    graphiQLEndpoint = config.graphQLEndpoint;\n  } else {\n    // Since we haven't set anything, AND we don't have an internal server,\n    // by default we'll use `/graphql` which will work for an external server\n    graphiQLEndpoint = '/graphql';\n  }\n\n  router.get(\n    graphiQLEndpoint,\n    graphiqlKoa({\n      endpointURL: config.graphQLEndpoint,\n    }),\n  );\n}\n\n// Attach any custom routes we may have set in userland\nconfig.routes.forEach(route => {\n  router[route.method](route.route, ...route.handlers);\n});\n\n/* BODY PARSING */\n\n// `koa-bodyparser` is used to process POST requests.  Check that it's enabled\n// (default) and apply a custom config if we need one\nif (config.enableBodyParser) {\n  app.use(require('koa-bodyparser')(\n    // Pass in any options that may have been set in userland\n    config.bodyParserOptions,\n  ));\n}\n\n/* CUSTOM APP INSTANTIATION */\n\n// Pass the `app` to do anything we need with it in userland. Useful for\n// custom instantiation that doesn't fit into the middleware/route functions\nif (typeof config.koaAppFunc === 'function') {\n  config.koaAppFunc(app);\n}\n\n// Listener function that will start http(s) server(s) based on userland\n// config and available ports\nconst listen = () => {\n  // Spawn the listeners.\n  const servers = [];\n\n  // Plain HTTP\n  if (config.enableHTTP) {\n    servers.push(\n      http.createServer(app.callback()).listen(process.env.PORT),\n    );\n  }\n\n  // SSL -- only enable this if we have an `SSL_PORT` set on the environment\n  if (process.env.SSL_PORT) {\n    servers.push(\n      https.createServer(config.sslOptions, app.callback()).listen(process.env.SSL_PORT),\n    );\n  }\n\n  return servers;\n};\n\n// Export everything we need to run the server (in dev or prod)\nexport default {\n  router,\n  app,\n  listen,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./kit/entry/server.js","module.exports = require(\"stream\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"stream\"\n// module id = 21\n// module chunks = 0","module.exports = require(\"http\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"http\"\n// module id = 22\n// module chunks = 0","module.exports = require(\"https\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"https\"\n// module id = 23\n// module chunks = 0","module.exports = require(\"isomorphic-fetch\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"isomorphic-fetch\"\n// module id = 24\n// module chunks = 0","module.exports = require(\"react-dom/server\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-dom/server\"\n// module id = 25\n// module chunks = 0","module.exports = require(\"koa\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"koa\"\n// module id = 26\n// module chunks = 0","module.exports = require(\"koa-sslify\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"koa-sslify\"\n// module id = 27\n// module chunks = 0","module.exports = require(\"kcors\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"kcors\"\n// module id = 28\n// module chunks = 0","module.exports = require(\"koa-send\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"koa-send\"\n// module id = 29\n// module chunks = 0","module.exports = require(\"koa-helmet\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"koa-helmet\"\n// module id = 30\n// module chunks = 0","module.exports = require(\"koa-router\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"koa-router\"\n// module id = 31\n// module chunks = 0","module.exports = require(\"microseconds\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"microseconds\"\n// module id = 32\n// module chunks = 0","module.exports = require(\"react-router\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-router\"\n// module id = 33\n// module chunks = 0","module.exports = require(\"apollo-server-koa\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"apollo-server-koa\"\n// module id = 34\n// module chunks = 0","module.exports = require(\"apollo-local-query\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"apollo-local-query\"\n// module id = 35\n// module chunks = 0","/* eslint-disable import/no-unresolved */\n// Your app's entry point.  Every ReactQL projects requires 'src/app.js',\n// which both the server and browser will import.\n//\n// In this file, you'll do two things:\n//\n// 1.  Import `kit/config`, and configure your app.  In this example, I'm\n// adding a custom Redux reducer that acts as a simple counter, and enabling\n// a built-in GraphQL server that imports a schema for a simple message.\n//\n// 2.  Export the root React component that goes between <div id=\"main\"/>\n// in the server-side HTML.\n\n// ----------------------\n// IMPORTS\n\n/* ReactQL */\n\n// Config API, for adding reducers and configuring our ReactQL app\nimport config from 'kit/config';\n// React\nimport React from 'react';\n/* App */\n\n// Example counter reducer.  This simply increments the counter by +1\nimport counterReducer from 'src/reducers/counter';\n\n// Main component -- i.e. the 'root' React component in our app\nimport Main from 'src/components/main';\n\n// Init global styles.  These will be added to the resulting CSS automatically\n// without any class hashing.  Use this to include default or framework CSS.\nimport './styles.global.css';\n\n// ----------------------\n\n/* REDUCERS */\n\n// Add our custom `counter` reducer, with the initial state as a zero count.\n// Note:  The initial state (3rd param) will automatically be wrapped in\n// `seamless-immutable` by the kit's Redux init code, so plain objects are\n// automatically immutable by default\nconfig.addReducer('counter', counterReducer, { count: 0 });\n\n/* GRAPHQL */\n\n// Enable the internal GraphQL server.  This will do two things:\n//\n// 1.  On the server, it will set-up the necessary route handlers to 'listen'\n// to incoming GraphQL requests on `/graphql`, as well as (by default) set-up\n// the GraphiQL IDE\n//\n// 2.  On the client, it will append the correct server URL so that we can\n// call the ReactQL host properly, and let the server handle our requests\nconfig.enableGraphQLServer();\n// eslint-disable-next-line import/no-webpack-loader-syntax\n\n\n/* SERVER */\n\n// Set our server config, by checking `SERVER` -- this code path will be\n// eliminated by Webpack in the browser, so we can safely add this.\nimport ReactGoogleSheetConnector from \"react-google-sheet-connector\"\nif (SERVER) {\n  /* SSL */\n\n  // By default, the Koa web server runs on a plain HTTP server. However,\n  // you can easily enable HTTPS.  In the following commands, I grab a sample\n  // self-signed key/cert combo and call `config.enableSSL()` with the options\n  // I want to pass to the `https.createServer()` that happens under the hood.\n  //\n  // Note: Running https:// in your browser using this self-signed cert will\n  // undoubtably raise a security error. But at least we can see it's working.\n  //\n  // Production note: I generally recommend using a dedicated upstream proxy\n  // such as Nginx to handle HTTPS traffic, since the TLS handshake will likely\n  // be faster, and you can add HTTP/2 and have much finer-grain control over\n  // HTTP. But, if you need a fast SSL service, ReactQL has you covered!\n\n  /*\n    Uncomment the next two lines to enable SSL!\n  */\n\n  const cert = require('src/cert/self_signed');\n  config.enableSSL({ key: cert.key, cert: cert.cert });\n\n  // If wanted, you could also run an *SSL-only* server by uncommenting:\n  // config.disableHTTP();\n\n  // Or, you could automatically redirect non-HTTP traffic to SSL by\n  // uncommenting the following: (Note: pass { port: 8081 }) for development\n  // or { port: 4000 } for the default production port\n  // config.forceSSL({ port: 8081 });\n\n  /* GRAPHQL SCHEMA */\n  // Pass in the schema to use for our internal GraphQL server.  Note we're\n  // doing this inside a `SERVER` block to avoid importing a potentially large\n  // file, which would then inflate our client bundle unnecessarily\n  config.setGraphQLSchema(require('src/graphql/schema').default);\n\n  /* CUSTOM ROUTES */\n\n  // We can add custom routes to the web server easily, by using\n  // `config.add<Get|Post|Put|Patch>Route()`.  Note:  These are server routes only.\n  config.addGetRoute('/test', async ctx => {\n    // For demo purposes, let's get a JSON dump of the current Redux state\n    // to see that we can expect its contents\n    const stateDump = JSON.stringify(ctx.store.getState());\n\n    // Display a simple message, along with the Redux dump.  Note that this\n    // won't contain a full `apollo` response, because it hasn't passed through\n    // the React handler -- but it *does* mean we can still manipulate the state\n    // from within our root, or fire action handlers!\n    ctx.body = `Hello from your ReactQL route. Redux dump: ${stateDump}`;\n  });\n\n  /* CUSTOM 404 HANDLER */\n\n  // By default, if the server gets a route request that results in a 404,\n  // it will set `ctx.status = 404` but continue to render the <NotFound>\n  // block as normal.  If we want to add our own custom handler, we can use\n  // `config.set404Handler()` as below.\n  //\n  // Note:  This only applies to SERVER routes.  On the client, the\n  // <NotFound> block will *always* run.\n\n  config.set404Handler(ctx => {\n    // Like above, we'll grab a dump of the store state again -- this time,\n    // it *will* contain a full `apollo` dump because in order to figure out that\n    // a route has hit a 404, it will already have rendered the React chain\n    // and retrieved any relevant GraphQL\n    const stateDump = JSON.stringify(ctx.store.getState());\n\n    // Explicitly set the return status to 404.  This is done for us by\n    // default if we don't have a custom 404 handler, but left to the function\n    // otherwise (since we might not always want to return a 404)\n    ctx.status = 404;\n\n    // Set the body\n    ctx.body = `This route does not exist on the server - Redux dump: ${stateDump}`;\n  });\n\n  /* CUSTOM ERROR HANDLER */\n\n  // By default, any exceptions thrown anywhere in the middleware chain\n  // (including inside the `createReactHandler` func) will propogate up the\n  // call stack to a default error handler that simply logs the message and\n  // informs the user that there's an error.  We can override that default\n  // behaviour with a func with a (e, ctx, next) -> {} signature, where `e` is\n  // the error thrown, `ctx` is the Koa context object, and `next()` should\n  // be called if you want to recover from the error and continue processing\n  // subsequent middleware.  Great for logging to third-party tools, tc.\n  config.setErrorHandler((e, ctx /* `next` is unused in this example */) => {\n    // Mimic the default behaviour with an overriden message, so we know it's\n    // working\n    // eslint-disable-next-line no-console\n    console.log('Error: ', e.message);\n    ctx.body = 'Some kind of error. Check your source code.';\n  });\n\n  /* CUSTOM KOA APP INSTANTIATION */\n\n  // If you need to do something with `app` outside of middleware/routing,\n  // you can pass a func to `config.getKoaApp()` that will be fed the `app`\n  // instance directly.\n  config.getKoaApp(app => {\n    // First, we'll add a new `engine` key to the app.context`\n    // prototype (that per-request `ctx` extends) that can be\n    // used in the middleware below, to set a `Powered-By` header.\n    // eslint-disable-next-line no-param-reassign\n    app.context.engine = 'ReactQL';\n\n    // We'll also add a generic error handler, that prints out to the console.\n    // Note: This is a 'lower-level' than `config.setErrorHandler()` because\n    // it's not middleware -- it's for errors that happen at the server level\n    app.on('error', e => {\n      // This function should never show up, because `config.setErrorHandler()`\n      // is already catching errors -- but just an FYI for what you might do.\n      // eslint-disable-next-line no-console\n      console.error('Server error:', e);\n    });\n  });\n\n  /* CUSTOM MIDDLEWARE */\n\n  // We can set custom middleware to be processed on the server.  This gives us\n  // fine-grain control over headers, requests, responses etc, and even decide\n  // if we want to avoid the React handler until certain conditions\n  config.addMiddleware(async (ctx, next) => {\n    // Let's add a custom header so we can see middleware in action\n    ctx.set('Powered-By', ctx.engine); // <-- `ctx.engine` srt above!\n\n    // For the fun of it, let's demonstrate that we can fire Redux actions\n    // and it'll manipulate the state on the server side!  View the SSR version\n    // to see that the counter is now 1 and has been passed down the wire\n    ctx.store.dispatch({ type: 'INCREMENT_COUNTER' });\n\n    // Always return `next()`, otherwise the request won't 'pass' to the next\n    // middleware in the stack (likely, the React handler)\n    return next();\n  });\n}\n\n// In app.js, we need to export the root component we want to mount as the\n// starting point to our app.  We'll just export the `<Main>` component.\nconst App = () =><ReactGoogleSheetConnector\n                                           apiKey={'AIzaSyDsMjF09-g8DtbrexQhPk3_-y6RL2V4jHI'}\n                                           spreadsheetId={'1pDT-d3co7oyAoC9sCBIMq-0uzjGu-SSTqGq0JNE0O_E'}\n                                           spinner={ <div className={\"loading-spinner\"}>Loading...</div> } >\n  <Main />\n</ReactGoogleSheetConnector>\nexport default Main;\n\n\n\n// WEBPACK FOOTER //\n// ./src/app.js","// Sample reducer, showing how you can 'listen' to the `INCREMENT_COUNTER`\n// action, and update the counter state\n\n// Note: There's no need to specify default state, because the kit's Redux\n// init code wraps `undefined` state values in a `defaultReducer()` function,\n// that captures Redux sentinel vals and responds back with a black object --\n// so in our reducer functions, we can safely assume we're working with 'real'\n// immutable state\n\nexport default function reducer(state, action) {\n  if (action.type === 'INCREMENT_COUNTER') {\n    // Where did `state.merge()` come from?  Our plain state object is automatically\n    // wrapped in a call to `seamless-immutable` in our reducer init code,\n    // so we can use its functions to return a guaranteed immutable version\n    return state.merge({\n      count: state.count + 1,\n    });\n  }\n  return state;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/reducers/counter.js","// Main React component, that we'll import in `src/app.js`\n//\n// Note a few points from this file:\n//\n// 1.  We're using the format `main/index.js` for this file, which means we\n// can simply import 'src/components/main', which will auto-default to index.js.\n// This is a useful pattern when you have styles/images to pull from, and you\n// want to keep the component tree organised.\n//\n// 2.  We import SASS and a logo SVG file directly.  Classnames will be hashed\n// automatically, and images will be compressed/optimised in production.  File\n// names that are made available in the import variable will be identical on\n// both the server and browser.\n//\n// 3.  We're introducing React Router in this component.  In RR v4, routes are\n// not defined globally-- they're defined declaratively on components, so we\n// can respond to route changes anywhere.\n//\n// 4.  We're using `react-helmet`, which allows us to set <head> data like\n// a <title> or <meta> tags, which are filtered up to the main <Html> component\n// before HTML rendering.\n\n// ----------------------\n// IMPORTS\n\n/* NPM */\n\n// React\nimport React from 'react';\nimport _ from 'lodash'\n\n// Routing via React Router\nimport {\n  Link,\n  Route,\n  Switch,\n} from 'react-router-dom';\n\n// <Helmet> component for setting the page title/meta tags\nimport Helmet from 'react-helmet';\n\n/* ReactQL */\n\n// NotFound 404 handler for unknown routes\nimport {Redirect} from 'kit/lib/routing';\n\n/* App */\n\n// Child React components. Note:  We can either export one main React component\n// per file, or in the case of <Home>, <Page> and <WhenFound>, we can group\n// multiple components per file where it makes sense to do so\nimport GraphQLMessage from 'src/components/graphql';\nimport {Home, Page, WhenNotFound} from 'src/components/routes';\nimport ReduxCounter from 'src/components/redux';\nimport Stats from 'src/components/stats';\nimport Styles from 'src/components/styles';\n\n// Styles\nimport css from './main.scss';\n\n// Get the ReactQL logo.  This is a local .svg file, which will be made\n// available as a string relative to [root]/dist/assets/img/\nimport logo from './reactql-logo.svg';\nimport CollegeCard from '../CollegeCard'\nimport {connectToSpreadsheet} from \"react-google-sheet-connector\";\n\n\n// ----------------------\n\nclass Main extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      colleges: [{\n        cname: 'Hello',\n        zone: 'Z1',\n        status: 'Status'\n      },\n        {\n          cname: 'College 2',\n          zone: 'Z2',\n          status: 'Status2'\n        }],\n\n      response: {},\n    },\n      this.updateInfo = this.updateInfo.bind(this)\n  }\n\n  updateInfo() {\n    var url = 'https://sheets.googleapis.com/v4/spreadsheets/1pDT-d3co7oyAoC9sCBIMq-0uzjGu-SSTqGq0JNE0O_E/values/Info?key=AIzaSyDsMjF09-g8DtbrexQhPk3_-y6RL2V4jHI';\n    fetch(url)\n      .then(function (response) {\n        return response.json();\n      }).then((response) => this.setState(Object.assign({}, this.state, {response})));\n  }\n\n  componentWillMount() {\n    this.updateInfo();\n  }\n\n  render() {\n    if (this.state.response == {}) return;\n    if (this.state.response.values === undefined) return <div>Loading...</div>;\n    // var cards = this.state.colleges.map((c, i) => <CollegeCard key={i} cname={c.cname} zone={c.zone} status={c.status}/>)\n    console.log(this.state.response)\n    //const cards = this.props.getSheet('Info').map((row, i) => <p key={i}>JSON.stringify(row)</p>)\n    // const cards = this.state.response.values.map((row, i) => <p key={i}>{JSON.stringify(row)}</p>);\n    const values = this.state.response.values.map((v) => {\n        return {\n          cname: v[1],\n          zone: v[0],\n          status: v[2],\n          comments: v[5],\n          count: v[3],\n          desiredCount: v[4],\n        }\n      }\n    );\n    const items = _.filter(values, ((v, i) => {\n      if(i == 0)return false;\n      if(v.length < 2)return false;\n      if(v.cname === '' || v.cname === undefined)return false;\n      if(v.zone === '')return false;\n      return true;\n    }));\n    console.log(items)\n    const cards = items.map((r, i) => {\n      return <div key={i} className={css.card}><CollegeCard  cname={r.cname} zone={r.zone} status={r.status} comments={r.comments} count={r.count} desiredCount={r.desiredCount}/>\n      </div>\n    });\n    return <div className={css.mainWrapper}>\n      <Helmet\n        title=\"Estat del referèndum\"\n        meta={[{\n          name: 'description',\n          content: '',\n        }]}/>\n      <h1>Estat del referèndum - Clic per localitzar</h1>\n      <div className={css.cardWrapper}>\n        {cards}\n      </div>\n      {/*{JSON.stringify(this.state.response)}*/}\n    </div>\n  }\n}\n\nexport default Main;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/main/index.js","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"message\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"message\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"Message\"},\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":74}};\n    doc.loc.source = {\"body\":\"#import \\\"./message.gql\\\"\\n\\nquery message {\\n  message {\\n    ...Message\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \r\n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  doc.definitions = doc.definitions.concat(unique(require(\"./message.gql\").definitions));\r\n\r\nmodule.exports = doc;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/graphql/queries/all_messages.gql\n// module id = 39\n// module chunks = 0","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"FragmentDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Message\"},\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Message\"}},\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"alias\":null,\"name\":{\"kind\":\"Name\",\"value\":\"text\"},\"arguments\":[],\"directives\":[],\"selectionSet\":null}]}}],\"loc\":{\"start\":0,\"end\":39}};\n    doc.loc.source = {\"body\":\"fragment Message on Message {\\n  text\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \r\n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \r\nmodule.exports = doc;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/graphql/queries/message.gql\n// module id = 40\n// module chunks = 0","module.exports = require(\"react-redux\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-redux\"\n// module id = 41\n// module chunks = 0","module.exports = {\n\t\"data\": \"data-eKdVCebIM1zdB9nkKGVuo\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/stats.scss\n// module id = 42\n// module chunks = 0","module.exports = {\n\t\"styleExamples\": \"styleExamples-3xNBTJxY-z2bNLyXVIPpqa\",\n\t\"example\": \"example-2o3nYrrxEPP4qAN_MX40yP\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/styles/styles.css\n// module id = 43\n// module chunks = 0","module.exports = {\n\t\"example\": \"example-in82TjWAa6XPhcUp90TNx\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/styles/styles.scss\n// module id = 44\n// module chunks = 0","module.exports = {\n\t\"example\": \"example-2XEHsLAgY2KYCsz3JLGKJz\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/styles/styles.less\n// module id = 45\n// module chunks = 0","module.exports = {\n\t\"hello\": \"hello-3miPRdT0AE0GEdybUXZgjk\",\n\t\"logo\": \"logo-1FEVxpGlMJhrRzCQ-paRJ\",\n\t\"mainWrapper\": \"mainWrapper-3-0uVnMygRzGCIa1HIv0iW\",\n\t\"cardWrapper\": \"cardWrapper-10cpBHemv2xRAiMX2WYz4C\",\n\t\"card\": \"card-1R1m33lBUZzXK8NpwDrrzd\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/main/main.scss\n// module id = 46\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/img/reactql-logo.7b90d212d7c2537aeffb13ed959c5491.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/main/reactql-logo.svg\n// module id = 47\n// module chunks = 0","// Main React component, that we'll import in `src/app.js`\n//\n// Note a few points from this file:\n//\n// 1.  We're using the format `main/index.js` for this file, which means we\n// can simply import 'src/components/main', which will auto-default to index.js.\n// This is a useful pattern when you have styles/images to pull from, and you\n// want to keep the component tree organised.\n//\n// 2.  We import SASS and a logo SVG file directly.  Classnames will be hashed\n// automatically, and images will be compressed/optimised in production.  File\n// names that are made available in the import variable will be identical on\n// both the server and browser.\n//\n// 3.  We're introducing React Router in this component.  In RR v4, routes are\n// not defined globally-- they're defined declaratively on components, so we\n// can respond to route changes anywhere.\n//\n// 4.  We're using `react-helmet`, which allows us to set <head> data like\n// a <title> or <meta> tags, which are filtered up to the main <Html> component\n// before HTML rendering.\n\n// ----------------------\n// IMPORTS\n\n/* NPM */\n\n// React\nimport React from 'react';\n\n// Routing via React Router\nimport {\n  Link,\n  Route,\n  Switch,\n} from 'react-router-dom';\n\n// <Helmet> component for setting the page title/meta tags\nimport Helmet from 'react-helmet';\n\n/* ReactQL */\n\n// NotFound 404 handler for unknown routes\nimport {Redirect} from 'kit/lib/routing';\n\n/* App */\n\n// Child React components. Note:  We can either export one main React component\n// per file, or in the case of <Home>, <Page> and <WhenFound>, we can group\n// multiple components per file where it makes sense to do so\nimport GraphQLMessage from 'src/components/graphql';\nimport {Home, Page, WhenNotFound} from 'src/components/routes';\nimport ReduxCounter from 'src/components/redux';\nimport Stats from 'src/components/stats';\nimport Styles from 'src/components/styles';\n\n// Styles\nimport css from './main.scss';\n\n\n// ----------------------\n\nexport default (props) => {\n\n  var statusIntents = {\n    'Falta gent': 'pt-intent-warning',\n    'Assegurat': 'pt-intent-success',\n    'Tancat': 'pt-intent-primary',\n    'Precintat': 'pt-intent-danger',\n  }\n  function getIntent(status) {\n    return statusIntents[status];\n  }\n  var {comments, status, count, desiredCount} = props;\n  if (!status) status = 'No info'\n  if(props.count != undefined && props.count != \"\"){\n    const display = count + (desiredCount != undefined ? '/' + desiredCount : '');\n    var countInfo = <span className={'pt-tag pt-minimal'}>{display}</span>\n  }\n  function buildMapsURL() {\n    var query = [\n      props.cname.split(' ').join('+'),\n      props.zone.split(' ').join('+'),\n    ].join('+')\n    return 'https://www.google.es/maps/search/' + query\n  }\n  return (\n\n    <div>\n      <div className={'docs-card-example'}>\n        <div className={'pt-card pt-elevation-0 pt-interactive'} onClick={(event) => {event.preventDefault(); window.open(buildMapsURL())}} >\n          <h4 key={0}>{props.cname}</h4><h6 key={1}>{props.zone}</h6>\n          <p key={2}>{comments}</p>\n          <div className={css.cardTags} key={3}>\n            <span className={'pt-tag pt-large' + ' ' + statusIntents[status]}>{status}</span>\n            {countInfo !== undefined ? countInfo : ''}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/CollegeCard/index.js","module.exports = {\n\t\"hello\": \"hello-3CF0_gt42eLmlMGosXYvDN\",\n\t\"logo\": \"logo-2pdaylHgU_xHssLMC1SZsp\",\n\t\"cardTags\": \"cardTags-39tGDHxAsDBL7brAHAD4MD\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/CollegeCard/main.scss\n// module id = 49\n// module chunks = 0","module.exports = require(\"react-google-sheet-connector\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-google-sheet-connector\"\n// module id = 51\n// module chunks = 0","// Self-signed certificate. Used for the purposes of running a demo SSL server\n// in the sample kit. Don't use in production!\n\n// Private key file\nexport const key = `\n-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEArImW6u4aqhFf2sXDWjYiSg6W9e7LxNz6YbTk0E/G3vybHZk9\n4DLe/LLF2x2740WV60DLBXSw1PXbRdNX90MDUJey++BMNDrNlYNTgKC5jBSO54mD\nu3WKqhQfawYIaraNdzFix8yCgDgNyDuOziWTcIHRIO4DGH3zERcUH9yxrepoSuE9\nHqROVF+dsgTvP+I6CYULMTIDncQi5QaK6DScykAFs8lobmBuZ6ncEZJWejIzzdAo\nZGaW1SQY7BwCauckiqbdlvYdLoRqijvnl/1IyYDBYbDpg+LGnw1US5dmzSf68biT\nVpdsmoZi4TgH8Cmnx1VKzGErvaFjJmguhiqqSwIDAQABAoIBAECVsFx4jJqkrlDi\nPmICaYt3MqMUpEoovcDdSdmAQ10tCZNmzXajFD1bXhzLYI2OerP5KQX9zEOrVE0q\n836nIxKD9oe6Skwyxsn0wskfYNVCzMt2+kytjx5jMe+J7pSjiQjY/7TypNcCJIaT\nZL1d63bt4S6Gabo9S0NWdD4JCqmiu7X8AhJY4TcMr9taRKYH3ileGSRrp2jQyYGV\n+E11f8jb6VLFNWJzYV0aRftOefbFm8IQv13vGkxPtJ054tqPfdrIiI6GY01yRxS2\nxCPVREnw/nvPu2a3I7EdXdZjgkGMDt9rMGJOkWpEuk9UlEIQqsGRBZ2LfjnS8Kw2\nX65JbMECgYEA2vbjJ+0Q7tyxHxp468r84NGiZT/W92p5B31S1yE6czSFtk2rw2vK\n6nM5vlYwKnYt0ESlYtmdiWyl4mdrA2eclUczwuVbISlMxLphMs3puQFVcCoBYQ9q\nB1Z60BkNfevWXbSN9SH+E/yqqGA9HMuCKcyDIgKsYXvBNyPMlhNloSMCgYEAybhs\n3SbxS67NWlF7kT/A8rBDy8alWWAUcX4qD6fxzRpilrT7ChHPydMsgS9rd436GBId\nhlFSy+wKfwNvFeyZ59tSWBruEo/9tIPy/aSJRWgxPXcmtoMN/URNvM0igm+ModYA\ngMMddekNz+qjpD0a5gSMiw/nV18Kbg3N785haLkCgYB7YEcoFQTIgiNu8hyWR57r\nElPdlvYKHL0rQisuOnPTvBFnYiZZC2Cfb+NmYuvq0QIJatSBeTqx1z007661kWkC\nF8eLlm4dpkayRo5D8RAzhRPeCl0SknvcvJagsK0QeZUk4XpnWArwuhpymx90HRsv\ncCOnQzhcCT4aUpqRKUbHXwKBgCX2rZZZc+QYe9FZsHW/l+KUxc2eDxRo/q/1XJkh\ntGIzawaN/QkCHScQtTmC4SjY8Y6CKkhTGdADFl6dGNT5eGWoYzDtsIyRyN+mTZ7q\nzmLfnxTATerfc0yNBExaFvqRX9g9XE7fabX9LHpK4I1SarOLe5/YWGObIW1g77cI\nElERAoGAI0R8KGB6qLmAUx2Kt1LcrH8anhJ32q/qimYdae+0rpfJ7PgqtEyohJ2W\ncPOb3RRB2Cte/tYfhZse91lhuFMksp5R+/7H1aAA6u8vw2RFRVfpQMIq8Jag9xoA\nwreduKK1jVs++uTaWsz8hJm+OivXz+TVEbv14FxCG+UL0+jHgak=\n-----END RSA PRIVATE KEY-----\n`;\n\n// Certificate\nexport const cert = `\n-----BEGIN CERTIFICATE-----\nMIICpDCCAYwCCQDJpSJg3QqP6zANBgkqhkiG9w0BAQsFADAUMRIwEAYDVQQDDAls\nb2NhbGhvc3QwHhcNMTcwODI4MTUzNDM3WhcNMjcwODI2MTUzNDM3WjAUMRIwEAYD\nVQQDDAlsb2NhbGhvc3QwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCs\niZbq7hqqEV/axcNaNiJKDpb17svE3PphtOTQT8be/JsdmT3gMt78ssXbHbvjRZXr\nQMsFdLDU9dtF01f3QwNQl7L74Ew0Os2Vg1OAoLmMFI7niYO7dYqqFB9rBghqto13\nMWLHzIKAOA3IO47OJZNwgdEg7gMYffMRFxQf3LGt6mhK4T0epE5UX52yBO8/4joJ\nhQsxMgOdxCLlBoroNJzKQAWzyWhuYG5nqdwRklZ6MjPN0ChkZpbVJBjsHAJq5ySK\npt2W9h0uhGqKO+eX/UjJgMFhsOmD4safDVRLl2bNJ/rxuJNWl2yahmLhOAfwKafH\nVUrMYSu9oWMmaC6GKqpLAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAGu3NXny0wNR\nltJnRujm5hIDfvu/buG6KUcC/7VIfqWbu2sRjc6ItRWhLZhG46GpfBkU30drSlAe\nYAS8vxPPAXegX+X6spdWZu8YMAEncZQyOQsNnGGMUCH9D58Jb8XAGdYUp43M6bE8\nmuhQs6HDdtEqYpimiGhgBRgnMgbit0dN4jn2U7x0Z+TXbOOJHSN7WGDj5Cm12Dw8\ndG1lxJQxNCJuqV/E7Mw6L6Q7KDxiY3hqUeR1wcIE7lgtzhgoFBWv2P0KCyiH3VB/\nN9pdArD1KgMyvF7gUZ9jCsrsovOoCfxj8EQ2acgELHDnKA9pfwE8dX5N5iIb8AoE\nqoTa3AOG8Vk=\n-----END CERTIFICATE-----\n`;\n\n\n\n// WEBPACK FOOTER //\n// ./src/cert/self_signed.js","// Schema for sample GraphQL server.\n\n// ----------------------\n// IMPORTS\n\n// GraphQL schema library, for building our GraphQL schema\nimport {\n  GraphQLObjectType,\n  GraphQLString,\n  GraphQLSchema,\n} from 'graphql';\n\n// ----------------------\n\n// GraphQL can handle Promises from its `resolve()` calls, so we'll create a\n// simple async function that returns a simple message.  In practice, `resolve()`\n// will generally pull from a 'real' data source such as a database\nasync function getMessage() {\n  return {\n    text: `Hello from the GraphQL server @ ${new Date()}`,\n  };\n}\n\n// Message type.  Imagine this like static type hinting on the 'message'\n// object we're going to throw back to the user\nconst Message = new GraphQLObjectType({\n  name: 'Message',\n  description: 'GraphQL server message',\n  fields() {\n    return {\n      text: {\n        type: GraphQLString,\n        resolve(msg) {\n          return msg.text;\n        },\n      },\n    };\n  },\n});\n\n// Root query.  This is our 'public API'.\nconst Query = new GraphQLObjectType({\n  name: 'Query',\n  description: 'Root query object',\n  fields() {\n    return {\n      message: {\n        type: Message,\n        resolve() {\n          return getMessage();\n        },\n      },\n    };\n  },\n});\n\n// The resulting schema.  We insert our 'root' `Query` object, to tell our\n// GraphQL server what to respond to.  We could also add a root `mutation`\n// if we want to pass mutation queries that have side-effects (e.g. like HTTP POST)\nexport default new GraphQLSchema({\n  query: Query,\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/graphql/schema.js","/* eslint-disable no-underscore-dangle */\n\n/*\nCustom Redux store creation.  Along with the default Apollo store,\nwe can define custom reducers using `kit/config.addReducer()` which will\nbe available on the server and in the browser.\n\nStore state is wrapped by `seamless-immutable` to enforce a pattern of\nimmutability, to prevent weird side effects.\n*/\n\n// ----------------------\n// IMPORTS\n\n/* NPM */\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport Immutable from 'seamless-immutable';\n\n/* Local */\nimport config from 'kit/config';\n\n// ----------------------\n\n// Detect if we're both in the browser, AND we have dehydrated state\nconst hasState = !!(!SERVER && window.__STATE__);\n\n// Helper function that 'unwinds' the `config.reducers` Map, and provides\n// the `reducer` function or `initialState` (wrapped in `seamless-immutable`)\n// depending on what we asked for\nfunction unwind(reducer = true) {\n  // Unwind `config.reducers`.  If we're looking for the `reducer`, we'll\n  // wrap this in a `defaultReducer` function that properly handles the Redux\n  // 'undefined' sentinel value, or calls 'real' reducer if it's not undefined.\n  //\n  // If we're not looking for reducers, it'll pull out the `initialState`\n  // variable instead, which we'll further process below\n  const r = Object.assign({},\n    ...[].concat([...config.reducers].map(arr => ({\n      [arr[0]]: reducer ? function defaultReducer(state, action) {\n        // If `state` === undefined, this is Redux sending a sentinel value\n        // to check our set-up.  So we'll send back a plain object to prove\n        // that we're properly handling our reducer\n        if (typeof state === 'undefined') return {};\n\n        // Otherwise, call our real reducer with the {state, action}\n        return arr[1].reducer(state, action);\n      } : arr[1].initialState,\n    }))),\n  );\n\n  // If this is a reducer, return at this point\n  if (reducer) return r;\n\n  // If not, we're looking for the state -- so let's map it and wrap the\n  // object in `seamless-immutable`, to avoid side-effects with Redux\n  return Object.assign({}, ...Object.keys(r).map(key => ({\n    [key]: Immutable((hasState && (window.__STATE__[key])) || r[key]),\n  })));\n}\n\nexport default function createNewStore(apolloClient) {\n  const store = createStore(\n    // By default, we'll use just the apollo reducer.  We can easily add our\n    // own here, for global store management outside of Apollo\n    combineReducers({\n      apollo: apolloClient.reducer(),\n      ...unwind(),\n    }),\n    // Initial server state, provided by the server.\n    {\n      apollo: (hasState && window.__STATE__.apollo) || {},\n      ...unwind(false),\n    },\n    compose(\n      applyMiddleware(\n        apolloClient.middleware(),\n        thunkMiddleware,\n      ),\n      // Enable Redux Devtools on the browser, for easy state debugging\n      // eslint-disable-next-line no-underscore-dangle\n      (!SERVER && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined') ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f,\n    ),\n  );\n\n  return store;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./kit/lib/redux.js","module.exports = require(\"redux\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"redux\"\n// module id = 55\n// module chunks = 0","module.exports = require(\"redux-thunk\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"redux-thunk\"\n// module id = 56\n// module chunks = 0","module.exports = require(\"seamless-immutable\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"seamless-immutable\"\n// module id = 57\n// module chunks = 0","/* eslint-disable react/no-danger, no-return-assign, no-param-reassign */\n\n// Component to render the full HTML response in React\n\n// ----------------------\n// IMPORTS\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// ----------------------\n\nconst Html = ({ head, scripts, window, css, children }) => (\n  <html lang=\"en\" prefix=\"og: http://ogp.me/ns#\">\n    <head>\n      <meta charSet=\"utf-8\" />\n      <meta httpEquiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n      <meta httpEquiv=\"Content-Language\" content=\"en\" />\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n      {head.meta.toComponent()}\n      <link rel=\"stylesheet\" href={css} />\n      {head.title.toComponent()}\n    </head>\n    <body>\n      <div id=\"main\">{children}</div>\n      <script\n        dangerouslySetInnerHTML={{\n          __html: Object.keys(window).reduce(\n            (out, key) => out += `window.${key}=${JSON.stringify(window[key])};`,\n            ''),\n        }} />\n      {scripts.map(src => <script key={src} src={src} />)}\n    </body>\n  </html>\n);\n\nHtml.propTypes = {\n  head: PropTypes.object.isRequired,\n  window: PropTypes.object.isRequired,\n  scripts: PropTypes.arrayOf(PropTypes.string).isRequired,\n  css: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n};\n\nexport default Html;\n\n\n\n// WEBPACK FOOTER //\n// ./kit/views/ssr.js","// ----------------------\n// IMPORTS\n\n/* NPM */\n\n// Apollo client library\nimport { createNetworkInterface, ApolloClient } from 'react-apollo';\n\n/* ReactQL */\n\n// Configuration\nimport config from 'kit/config';\n\n// Get environment, to figure out where we're running the GraphQL server\nimport { getServerURL } from 'kit/lib/env';\n\n// ----------------------\n\n// Helper function to create a new Apollo client, by merging in\n// passed options alongside any set by `config.setApolloOptions` and defaults\nexport function createClient(opt = {}) {\n  return new ApolloClient(Object.assign({\n    reduxRootSelector: state => state.apollo,\n  }, config.apolloClientOptions, opt));\n}\n\n// Wrap `createNetworkInterface` to attach middleware\nexport function getNetworkInterface(uri) {\n  const networkInterface = createNetworkInterface({\n    uri,\n    opts: config.apolloNetworkOptions,\n  });\n\n  // Attach middleware\n  networkInterface.use(config.apolloMiddleware.map(f => ({ applyMiddleware: f })));\n  networkInterface.useAfter(config.apolloAfterware.map(f => ({ applyAfterware: f })));\n\n  return networkInterface;\n}\n\n// Creates a new browser client\nexport function browserClient() {\n  // If we have an internal GraphQL server, we need to append it with a\n  // call to `getServerURL()` to add the correct host (in dev + production)\n  const uri = config.graphQLServer\n    ? `${getServerURL()}${config.graphQLEndpoint}` : config.graphQLEndpoint;\n\n  return createClient({\n    networkInterface: getNetworkInterface(uri),\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./kit/lib/apollo.js","// ----------------------\n// IMPORTS\n\nconst path = require('path');\n\n// ----------------------\n\n// Parent folder = project root\nconst root = path.join(__dirname, '..');\n\nmodule.exports = {\n  // Root project folder.  This is the current dir.\n  root,\n\n  // Kit.  ReactQL starter kit code.  You can edit these files, but be\n  // aware that upgrading your starter kit could overwrite them\n  kit: path.join(root, 'kit'),\n\n  // Entry points.  This is where webpack will look for our browser.js,\n  // server.js and vendor.js files to start building\n  entry: path.join(root, 'kit', 'entry'),\n\n  // Webpack configuration files\n  webpack: path.join(root, 'kit', 'webpack'),\n\n  // Views for internal use\n  views: path.join(root, 'kit', 'views'),\n\n  // Source path; where we'll put our application files\n  src: path.join(root, 'src'),\n\n  // Static files.  HTML, images, etc that can be processed by Webpack\n  // before being moved into the final `dist` folder\n  static: path.join(root, 'static'),\n\n  // Dist path; where bundled assets will wind up\n  dist: path.join(root, 'dist'),\n\n  // Dist path for development; where dev assets will wind up\n  distDev: path.resolve(root, 'dist', 'dev'),\n\n  // Public.  This is where our web server will start looking to serve\n  // static files from\n  public: path.join(root, 'dist', 'public'),\n};\n\n\n\n// WEBPACK FOOTER //\n// ./config/paths.js","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 61\n// module chunks = 0","module.exports = require(\"koa-bodyparser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"koa-bodyparser\"\n// module id = 62\n// module chunks = 0","module.exports = require(\"lodash\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash\"\n// module id = 63\n// module chunks = 0"],"sourceRoot":""}